

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 24 14:11:19 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376                           
   377                           	psect	strings
   378  0003                     __pstrings:	
   379  0003                     stringtab:	
   380  0003                     __stringtab:	
   381                           
   382                           ;	String table - string pointers are 1 byte each
   383  0003  1BFF               	btfsc	btemp+1,7
   384  0004  280D               	ljmp	stringcode
   385  0005  1383               	bcf	3,7
   386  0006  187F               	btfsc	btemp+1,0
   387  0007  1783               	bsf	3,7
   388  0008  0800               	movf	0,w
   389  0009  0A84               	incf	4,f
   390  000A  1903               	skipnz
   391  000B  0AFF               	incf	btemp+1,f
   392  000C  0008               	return
   393  000D                     stringcode:	
   394  000D                     stringdir:	
   395  000D  3000               	movlw	high stringdir
   396  000E  008A               	movwf	10
   397  000F  0804               	movf	4,w
   398  0010  0A84               	incf	4,f
   399  0011  0782               	addwf	2,f
   400  0012                     __stringbase:	
   401  0012  3400               	retlw	0
   402  0013                     __end_of__stringtab:	
   403  0013                     _dpowers:	
   404  0013  3401               	retlw	1
   405  0014  3400               	retlw	0
   406  0015  340A               	retlw	10
   407  0016  3400               	retlw	0
   408  0017  3464               	retlw	100
   409  0018  3400               	retlw	0
   410  0019  34E8               	retlw	232
   411  001A  3403               	retlw	3
   412  001B  3410               	retlw	16
   413  001C  3427               	retlw	39
   414  001D                     __end_of_dpowers:	
   415  0013                     _SSPBUF	set	19
   416  0014                     _SSPCON	set	20
   417  0009                     _PORTE	set	9
   418  0008                     _PORTD	set	8
   419  0007                     _PORTC	set	7
   420  0005                     _PORTA	set	5
   421  000C                     _PIR1bits	set	12
   422  001F                     _ADCON0bits	set	31
   423  0006                     _PORTB	set	6
   424  0008                     _PORTDbits	set	8
   425  0063                     _SSPIF	set	99
   426  005E                     _PEIE	set	94
   427  005F                     _GIE	set	95
   428  0091                     _SSPCON2bits	set	145
   429  0087                     _TRISCbits	set	135
   430  0094                     _SSPSTAT	set	148
   431  0093                     _SSPADD	set	147
   432  0091                     _SSPCON2	set	145
   433  0089                     _TRISE	set	137
   434  0088                     _TRISD	set	136
   435  0087                     _TRISC	set	135
   436  0086                     _TRISB	set	134
   437  0085                     _TRISA	set	133
   438  009F                     _ADCON1bits	set	159
   439  0463                     _SSPIE	set	1123
   440  043C                     _TRISC4	set	1084
   441  043B                     _TRISC3	set	1083
   442  0189                     _ANSELH	set	393
   443  0188                     _ANSEL	set	392
   444  001D                     STR_1:	
   445  001D  3450               	retlw	80	;'P'
   446  001E  344F               	retlw	79	;'O'
   447  001F  3454               	retlw	84	;'T'
   448  0020  3420               	retlw	32	;' '
   449  0021  3420               	retlw	32	;' '
   450  0022  3420               	retlw	32	;' '
   451  0023  3443               	retlw	67	;'C'
   452  0024  344F               	retlw	79	;'O'
   453  0025  344E               	retlw	78	;'N'
   454  0026  3454               	retlw	84	;'T'
   455  0027  3420               	retlw	32	;' '
   456  0028  3420               	retlw	32	;' '
   457  0029  3420               	retlw	32	;' '
   458  002A  3453               	retlw	83	;'S'
   459  002B  3445               	retlw	69	;'E'
   460  002C  344E               	retlw	78	;'N'
   461  002D  3400               	retlw	0
   462  002E                     STR_3:	
   463  002E  3425               	retlw	37	;'%'
   464  002F  3432               	retlw	50	;'2'
   465  0030  342E               	retlw	46	;'.'
   466  0031  3431               	retlw	49	;'1'
   467  0032  3469               	retlw	105	;'i'
   468  0033  3400               	retlw	0
   469  0034                     STR_2:	
   470  0034  3425               	retlw	37	;'%'
   471  0035  3433               	retlw	51	;'3'
   472  0036  342E               	retlw	46	;'.'
   473  0037  3431               	retlw	49	;'1'
   474  0038  3469               	retlw	105	;'i'
   475  0039  3400               	retlw	0
   476  0034                     
   477                           ; #config settings
   478  0000                     
   479                           	psect	cinit
   480  07FC                     start_initialization:	
   481  07FC                     __initialization:	
   482  07FC                     end_of_initialization:	
   483                           ;End of C runtime variable initialization code
   484                           
   485  07FC                     __end_of__initialization:	
   486  07FC  0183               	clrf	3
   487  07FD  120A  118A  2C73   	ljmp	_main	;jump to C main() function
   488                           
   489                           	psect	cstackCOMMON
   490  0070                     __pcstackCOMMON:	
   491  0070                     ?_isdigit:	
   492  0070                     ?_enviardatos:	
   493                           ; 1 bit 
   494                           
   495  0070                     ?_I2C_Master_Start:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ??_I2C_Master_Start:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_I2C_Master_Write:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_I2C_Master_Stop:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ??_I2C_Master_Stop:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ??_isdigit:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_startLCD:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_limpiarLCD:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_charLCD:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ??_charLCD:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_main:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_I2C_Master_Wait:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ??_I2C_Master_Wait:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?___bmul:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_I2C_Master_Read:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?___wmul:	
   541                           ; 2 bytes @ 0x0
   542                           
   543  0070                     ?___lwdiv:	
   544                           ; 2 bytes @ 0x0
   545                           
   546  0070                     ?___lldiv:	
   547                           ; 2 bytes @ 0x0
   548                           
   549  0070                     ___bmul@multiplicand:	
   550                           ; 4 bytes @ 0x0
   551                           
   552  0070                     _isdigit$801:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     enviardatos@crack:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     I2C_Master_Write@d:	
   559                           ; 2 bytes @ 0x0
   560                           
   561  0070                     I2C_Master_Read@a:	
   562                           ; 2 bytes @ 0x0
   563                           
   564  0070                     ___wmul@multiplier:	
   565                           ; 2 bytes @ 0x0
   566                           
   567  0070                     ___lwdiv@divisor:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0070                     ___lldiv@divisor:	
   571                           ; 2 bytes @ 0x0
   572                           
   573                           
   574                           ; 4 bytes @ 0x0
   575  0070                     	ds	1
   576  0071                     ??___bmul:	
   577  0071                     charLCD@V:	
   578                           ; 1 bytes @ 0x1
   579                           
   580  0071                     isdigit@c:	
   581                           ; 1 bytes @ 0x1
   582                           
   583                           
   584                           ; 1 bytes @ 0x1
   585  0071                     	ds	1
   586  0072                     ??_enviardatos:	
   587  0072                     ??_I2C_Master_Write:	
   588                           ; 1 bytes @ 0x2
   589                           
   590  0072                     ??_I2C_Master_Read:	
   591                           ; 1 bytes @ 0x2
   592                           
   593  0072                     ?_escribirLCD:	
   594                           ; 1 bytes @ 0x2
   595                           
   596  0072                     ___bmul@product:	
   597                           ; 1 bytes @ 0x2
   598                           
   599  0072                     escribirLCD@V:	
   600                           ; 1 bytes @ 0x2
   601                           
   602  0072                     ___wmul@multiplicand:	
   603                           ; 2 bytes @ 0x2
   604                           
   605  0072                     ___lwdiv@dividend:	
   606                           ; 2 bytes @ 0x2
   607                           
   608                           
   609                           ; 2 bytes @ 0x2
   610  0072                     	ds	1
   611  0073                     ___bmul@multiplier:	
   612                           
   613                           ; 1 bytes @ 0x3
   614  0073                     	ds	1
   615  0074                     ??_startLCD:	
   616  0074                     ??_limpiarLCD:	
   617                           ; 1 bytes @ 0x4
   618                           
   619  0074                     ?_setLCD:	
   620                           ; 1 bytes @ 0x4
   621                           
   622  0074                     ??_escribirLCD:	
   623                           ; 1 bytes @ 0x4
   624                           
   625  0074                     ??___wmul:	
   626                           ; 1 bytes @ 0x4
   627                           
   628  0074                     ??___lwdiv:	
   629                           ; 1 bytes @ 0x4
   630                           
   631  0074                     setLCD@V:	
   632                           ; 1 bytes @ 0x4
   633                           
   634  0074                     I2C_Master_Read@temp:	
   635                           ; 2 bytes @ 0x4
   636                           
   637  0074                     ___wmul@product:	
   638                           ; 2 bytes @ 0x4
   639                           
   640  0074                     ___lldiv@dividend:	
   641                           ; 2 bytes @ 0x4
   642                           
   643                           
   644                           ; 4 bytes @ 0x4
   645  0074                     	ds	1
   646  0075                     ___lwdiv@quotient:	
   647                           
   648                           ; 2 bytes @ 0x5
   649  0075                     	ds	1
   650  0076                     setLCD@M:	
   651                           
   652                           ; 2 bytes @ 0x6
   653  0076                     	ds	1
   654  0077                     ___lwdiv@counter:	
   655  0077                     escribirLCD@X:	
   656                           ; 1 bytes @ 0x7
   657                           
   658                           
   659                           ; 2 bytes @ 0x7
   660  0077                     	ds	1
   661  0078                     ??_setLCD:	
   662  0078                     ??___lldiv:	
   663                           ; 1 bytes @ 0x8
   664                           
   665  0078                     ?___lwmod:	
   666                           ; 1 bytes @ 0x8
   667                           
   668  0078                     setLCD@Z:	
   669                           ; 2 bytes @ 0x8
   670                           
   671  0078                     ___lwmod@divisor:	
   672                           ; 2 bytes @ 0x8
   673                           
   674                           
   675                           ; 2 bytes @ 0x8
   676  0078                     	ds	1
   677  0079                     ___lldiv@quotient:	
   678                           
   679                           ; 4 bytes @ 0x9
   680  0079                     	ds	1
   681  007A                     ___lwmod@dividend:	
   682                           
   683                           ; 2 bytes @ 0xA
   684  007A                     	ds	2
   685  007C                     ??___lwmod:	
   686                           
   687                           ; 1 bytes @ 0xC
   688  007C                     	ds	1
   689  007D                     ___lldiv@counter:	
   690  007D                     ___lwmod@counter:	
   691                           ; 1 bytes @ 0xD
   692                           
   693                           
   694                           ; 1 bytes @ 0xD
   695  007D                     	ds	1
   696                           
   697                           	psect	cstackBANK0
   698  0020                     __pcstackBANK0:	
   699  0020                     ?_I2C_Master_Init:	
   700  0020                     ?_sprintf:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0020                     sprintf@f:	
   704                           ; 2 bytes @ 0x0
   705                           
   706  0020                     I2C_Master_Init@c:	
   707                           ; 1 bytes @ 0x0
   708                           
   709                           
   710                           ; 4 bytes @ 0x0
   711  0020                     	ds	3
   712  0023                     ??_sprintf:	
   713                           
   714                           ; 1 bytes @ 0x3
   715  0023                     	ds	1
   716  0024                     ??_I2C_Master_Init:	
   717                           
   718                           ; 1 bytes @ 0x4
   719  0024                     	ds	2
   720  0026                     sprintf@ap:	
   721                           
   722                           ; 1 bytes @ 0x6
   723  0026                     	ds	1
   724  0027                     sprintf@flag:	
   725                           
   726                           ; 1 bytes @ 0x7
   727  0027                     	ds	1
   728  0028                     sprintf@val:	
   729                           
   730                           ; 2 bytes @ 0x8
   731  0028                     	ds	2
   732  002A                     sprintf@sp:	
   733                           
   734                           ; 1 bytes @ 0xA
   735  002A                     	ds	1
   736  002B                     sprintf@width:	
   737                           
   738                           ; 2 bytes @ 0xB
   739  002B                     	ds	2
   740  002D                     sprintf@prec:	
   741                           
   742                           ; 1 bytes @ 0xD
   743  002D                     	ds	1
   744  002E                     sprintf@c:	
   745                           
   746                           ; 1 bytes @ 0xE
   747  002E                     	ds	1
   748  002F                     ??_main:	
   749                           
   750                           ; 1 bytes @ 0xF
   751  002F                     	ds	2
   752  0031                     main@savechain:	
   753                           
   754                           ; 16 bytes @ 0x11
   755  0031                     	ds	16
   756  0041                     main@vcont1:	
   757                           
   758                           ; 2 bytes @ 0x21
   759  0041                     	ds	2
   760  0043                     main@temp:	
   761                           
   762                           ; 2 bytes @ 0x23
   763  0043                     	ds	2
   764  0045                     main@vpot1:	
   765                           
   766                           ; 2 bytes @ 0x25
   767  0045                     	ds	2
   768                           
   769                           	psect	maintext
   770  0473                     __pmaintext:	
   771 ;;
   772 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   773 ;;
   774 ;; *************** function _main *****************
   775 ;; Defined at:
   776 ;;		line 43 in file "Lab5LCDmaster.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  savechain      16   17[BANK0 ] unsigned char [16]
   781 ;;  vpot1           2   37[BANK0 ] int 
   782 ;;  temp            2   35[BANK0 ] int 
   783 ;;  vcont1          2   33[BANK0 ] int 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : B00/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       0       0       0       0
   794 ;;      Locals:         0      22       0       0       0
   795 ;;      Temps:          0       2       0       0       0
   796 ;;      Totals:         0      24       0       0       0
   797 ;;Total ram usage:       24 bytes
   798 ;; Hardware stack levels required when called:    2
   799 ;; This function calls:
   800 ;;		_I2C_Master_Init
   801 ;;		_I2C_Master_Read
   802 ;;		_I2C_Master_Start
   803 ;;		_I2C_Master_Stop
   804 ;;		_I2C_Master_Write
   805 ;;		_charLCD
   806 ;;		_escribirLCD
   807 ;;		_limpiarLCD
   808 ;;		_setLCD
   809 ;;		_sprintf
   810 ;;		_startLCD
   811 ;; This function is called by:
   812 ;;		Startup code after reset
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           
   817                           ;psect for function _main
   818  0473                     _main:	
   819  0473                     l1652:	
   820                           ;incstack = 0
   821                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   822                           
   823                           
   824                           ;Lab5LCDmaster.c: 44:     PORTA = 0;
   825  0473  1283               	bcf	3,5	;RP0=0, select bank0
   826  0474  1303               	bcf	3,6	;RP1=0, select bank0
   827  0475  0185               	clrf	5	;volatile
   828                           
   829                           ;Lab5LCDmaster.c: 45:     TRISA = 0;
   830  0476  1683               	bsf	3,5	;RP0=1, select bank1
   831  0477  1303               	bcf	3,6	;RP1=0, select bank1
   832  0478  0185               	clrf	5	;volatile
   833                           
   834                           ;Lab5LCDmaster.c: 46:     PORTB = 0;
   835  0479  1283               	bcf	3,5	;RP0=0, select bank0
   836  047A  1303               	bcf	3,6	;RP1=0, select bank0
   837  047B  0186               	clrf	6	;volatile
   838                           
   839                           ;Lab5LCDmaster.c: 47:     TRISB = 0;
   840  047C  1683               	bsf	3,5	;RP0=1, select bank1
   841  047D  1303               	bcf	3,6	;RP1=0, select bank1
   842  047E  0186               	clrf	6	;volatile
   843                           
   844                           ;Lab5LCDmaster.c: 48:     PORTC = 0;
   845  047F  1283               	bcf	3,5	;RP0=0, select bank0
   846  0480  1303               	bcf	3,6	;RP1=0, select bank0
   847  0481  0187               	clrf	7	;volatile
   848                           
   849                           ;Lab5LCDmaster.c: 49:     TRISC = 0;
   850  0482  1683               	bsf	3,5	;RP0=1, select bank1
   851  0483  1303               	bcf	3,6	;RP1=0, select bank1
   852  0484  0187               	clrf	7	;volatile
   853                           
   854                           ;Lab5LCDmaster.c: 50:     PORTD = 0;
   855  0485  1283               	bcf	3,5	;RP0=0, select bank0
   856  0486  1303               	bcf	3,6	;RP1=0, select bank0
   857  0487  0188               	clrf	8	;volatile
   858                           
   859                           ;Lab5LCDmaster.c: 51:     TRISD = 0;
   860  0488  1683               	bsf	3,5	;RP0=1, select bank1
   861  0489  1303               	bcf	3,6	;RP1=0, select bank1
   862  048A  0188               	clrf	8	;volatile
   863                           
   864                           ;Lab5LCDmaster.c: 52:     PORTE = 0;
   865  048B  1283               	bcf	3,5	;RP0=0, select bank0
   866  048C  1303               	bcf	3,6	;RP1=0, select bank0
   867  048D  0189               	clrf	9	;volatile
   868                           
   869                           ;Lab5LCDmaster.c: 53:     TRISE = 0;
   870  048E  1683               	bsf	3,5	;RP0=1, select bank1
   871  048F  1303               	bcf	3,6	;RP1=0, select bank1
   872  0490  0189               	clrf	9	;volatile
   873                           
   874                           ;Lab5LCDmaster.c: 55:     ANSEL = 0b00000000;
   875  0491  1683               	bsf	3,5	;RP0=1, select bank3
   876  0492  1703               	bsf	3,6	;RP1=1, select bank3
   877  0493  0188               	clrf	8	;volatile
   878                           
   879                           ;Lab5LCDmaster.c: 56:     ANSELH = 0;
   880  0494  0189               	clrf	9	;volatile
   881  0495                     l1654:	
   882                           
   883                           ;Lab5LCDmaster.c: 57:     I2C_Master_Init(100000);
   884  0495  3000               	movlw	0
   885  0496  1283               	bcf	3,5	;RP0=0, select bank0
   886  0497  1303               	bcf	3,6	;RP1=0, select bank0
   887  0498  00A3               	movwf	I2C_Master_Init@c+3
   888  0499  3001               	movlw	1
   889  049A  00A2               	movwf	I2C_Master_Init@c+2
   890  049B  3086               	movlw	134
   891  049C  00A1               	movwf	I2C_Master_Init@c+1
   892  049D  30A0               	movlw	160
   893  049E  00A0               	movwf	I2C_Master_Init@c
   894  049F  120A  118A  2293  120A  118A  	fcall	_I2C_Master_Init
   895  04A4                     l1656:	
   896                           
   897                           ;Lab5LCDmaster.c: 58:     char savechain[16];;Lab5LCDmaster.c: 60:     int vcont1;;Lab5L
      +                          CDmaster.c: 61:     int vpot1;;Lab5LCDmaster.c: 62:     int temp;;Lab5LCDmaster.c: 64:  
      +                             startLCD();
   898  04A4  120A  118A  23F1  120A  118A  	fcall	_startLCD
   899  04A9                     l1658:	
   900                           
   901                           ;Lab5LCDmaster.c: 65:     limpiarLCD();
   902  04A9  120A  118A  21D5  120A  118A  	fcall	_limpiarLCD
   903  04AE                     l1660:	
   904                           
   905                           ;Lab5LCDmaster.c: 66:     setLCD(1,1);
   906  04AE  3001               	movlw	1
   907  04AF  00F4               	movwf	setLCD@V
   908  04B0  3000               	movlw	0
   909  04B1  00F5               	movwf	setLCD@V+1
   910  04B2  3001               	movlw	1
   911  04B3  00F6               	movwf	setLCD@M
   912  04B4  3000               	movlw	0
   913  04B5  00F7               	movwf	setLCD@M+1
   914  04B6  120A  118A  223C  120A  118A  	fcall	_setLCD
   915  04BB                     l1662:	
   916                           
   917                           ;Lab5LCDmaster.c: 67:     escribirLCD("POT   CONT   SEN");
   918  04BB  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   919  04BC  00F2               	movwf	escribirLCD@V
   920  04BD  3080               	movlw	128
   921  04BE  00F3               	movwf	escribirLCD@V+1
   922  04BF  120A  118A  2305  120A  118A  	fcall	_escribirLCD
   923  04C4                     l1664:	
   924                           
   925                           ;Lab5LCDmaster.c: 71:         I2C_Master_Start();
   926  04C4  120A  118A  2175  120A  118A  	fcall	_I2C_Master_Start
   927  04C9                     l1666:	
   928                           
   929                           ;Lab5LCDmaster.c: 72:         I2C_Master_Write(0x51);
   930  04C9  3051               	movlw	81
   931  04CA  00F0               	movwf	I2C_Master_Write@d
   932  04CB  3000               	movlw	0
   933  04CC  00F1               	movwf	I2C_Master_Write@d+1
   934  04CD  120A  118A  2187  120A  118A  	fcall	_I2C_Master_Write
   935  04D2                     l1668:	
   936                           
   937                           ;Lab5LCDmaster.c: 73:         vcont1 = I2C_Master_Read(0);
   938  04D2  3000               	movlw	0
   939  04D3  00F0               	movwf	I2C_Master_Read@a
   940  04D4  00F1               	movwf	I2C_Master_Read@a+1
   941  04D5  120A  118A  2265  120A  118A  	fcall	_I2C_Master_Read
   942  04DA  0871               	movf	?_I2C_Master_Read+1,w
   943  04DB  1283               	bcf	3,5	;RP0=0, select bank0
   944  04DC  1303               	bcf	3,6	;RP1=0, select bank0
   945  04DD  00C2               	movwf	main@vcont1+1
   946  04DE  0870               	movf	?_I2C_Master_Read,w
   947  04DF  00C1               	movwf	main@vcont1
   948  04E0                     l1670:	
   949                           
   950                           ;Lab5LCDmaster.c: 74:         I2C_Master_Stop();
   951  04E0  120A  118A  217E  120A  118A  	fcall	_I2C_Master_Stop
   952  04E5                     l1672:	
   953                           
   954                           ;Lab5LCDmaster.c: 75:         _delay((unsigned long)((10)*(8000000/4000.0)));
   955  04E5  301A               	movlw	26
   956  04E6  1283               	bcf	3,5	;RP0=0, select bank0
   957  04E7  1303               	bcf	3,6	;RP1=0, select bank0
   958  04E8  00B0               	movwf	??_main+1
   959  04E9  30F7               	movlw	247
   960  04EA  00AF               	movwf	??_main
   961  04EB                     u1167:	
   962  04EB  0BAF               	decfsz	??_main,f
   963  04EC  2CEB               	goto	u1167
   964  04ED  0BB0               	decfsz	??_main+1,f
   965  04EE  2CEB               	goto	u1167
   966  04EF  2CF0               	nop2
   967  04F0                     l1674:	
   968                           
   969                           ;Lab5LCDmaster.c: 78:         I2C_Master_Start();
   970  04F0  120A  118A  2175  120A  118A  	fcall	_I2C_Master_Start
   971  04F5                     l1676:	
   972                           
   973                           ;Lab5LCDmaster.c: 79:         I2C_Master_Write(0x61);
   974  04F5  3061               	movlw	97
   975  04F6  00F0               	movwf	I2C_Master_Write@d
   976  04F7  3000               	movlw	0
   977  04F8  00F1               	movwf	I2C_Master_Write@d+1
   978  04F9  120A  118A  2187  120A  118A  	fcall	_I2C_Master_Write
   979  04FE                     l1678:	
   980                           
   981                           ;Lab5LCDmaster.c: 80:         vpot1 = I2C_Master_Read(0);
   982  04FE  3000               	movlw	0
   983  04FF  00F0               	movwf	I2C_Master_Read@a
   984  0500  00F1               	movwf	I2C_Master_Read@a+1
   985  0501  120A  118A  2265  120A  118A  	fcall	_I2C_Master_Read
   986  0506  0871               	movf	?_I2C_Master_Read+1,w
   987  0507  1283               	bcf	3,5	;RP0=0, select bank0
   988  0508  1303               	bcf	3,6	;RP1=0, select bank0
   989  0509  00C6               	movwf	main@vpot1+1
   990  050A  0870               	movf	?_I2C_Master_Read,w
   991  050B  00C5               	movwf	main@vpot1
   992  050C                     l1680:	
   993                           
   994                           ;Lab5LCDmaster.c: 81:         I2C_Master_Stop();
   995  050C  120A  118A  217E  120A  118A  	fcall	_I2C_Master_Stop
   996  0511                     l1682:	
   997                           
   998                           ;Lab5LCDmaster.c: 82:         _delay((unsigned long)((10)*(8000000/4000.0)));
   999  0511  301A               	movlw	26
  1000  0512  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0513  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0514  00B0               	movwf	??_main+1
  1003  0515  30F7               	movlw	247
  1004  0516  00AF               	movwf	??_main
  1005  0517                     u1177:	
  1006  0517  0BAF               	decfsz	??_main,f
  1007  0518  2D17               	goto	u1177
  1008  0519  0BB0               	decfsz	??_main+1,f
  1009  051A  2D17               	goto	u1177
  1010  051B  2D1C               	nop2
  1011  051C                     l1684:	
  1012                           
  1013                           ;Lab5LCDmaster.c: 84:         I2C_Master_Start();
  1014  051C  120A  118A  2175  120A  118A  	fcall	_I2C_Master_Start
  1015  0521                     l1686:	
  1016                           
  1017                           ;Lab5LCDmaster.c: 85:         I2C_Master_Write(0xD0);
  1018  0521  30D0               	movlw	208
  1019  0522  00F0               	movwf	I2C_Master_Write@d
  1020  0523  3000               	movlw	0
  1021  0524  00F1               	movwf	I2C_Master_Write@d+1
  1022  0525  120A  118A  2187  120A  118A  	fcall	_I2C_Master_Write
  1023  052A                     l1688:	
  1024                           
  1025                           ;Lab5LCDmaster.c: 86:         I2C_Master_Write(0x11);
  1026  052A  3011               	movlw	17
  1027  052B  00F0               	movwf	I2C_Master_Write@d
  1028  052C  3000               	movlw	0
  1029  052D  00F1               	movwf	I2C_Master_Write@d+1
  1030  052E  120A  118A  2187  120A  118A  	fcall	_I2C_Master_Write
  1031  0533                     l1690:	
  1032                           
  1033                           ;Lab5LCDmaster.c: 87:         I2C_Master_Stop();
  1034  0533  120A  118A  217E  120A  118A  	fcall	_I2C_Master_Stop
  1035  0538                     l1692:	
  1036                           
  1037                           ;Lab5LCDmaster.c: 88:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1038  0538  301A               	movlw	26
  1039  0539  1283               	bcf	3,5	;RP0=0, select bank0
  1040  053A  1303               	bcf	3,6	;RP1=0, select bank0
  1041  053B  00B0               	movwf	??_main+1
  1042  053C  30F7               	movlw	247
  1043  053D  00AF               	movwf	??_main
  1044  053E                     u1187:	
  1045  053E  0BAF               	decfsz	??_main,f
  1046  053F  2D3E               	goto	u1187
  1047  0540  0BB0               	decfsz	??_main+1,f
  1048  0541  2D3E               	goto	u1187
  1049  0542  2D43               	nop2
  1050  0543                     l1694:	
  1051                           
  1052                           ;Lab5LCDmaster.c: 89:         I2C_Master_Start();
  1053  0543  120A  118A  2175  120A  118A  	fcall	_I2C_Master_Start
  1054  0548                     l1696:	
  1055                           
  1056                           ;Lab5LCDmaster.c: 90:         I2C_Master_Write(0xD1);
  1057  0548  30D1               	movlw	209
  1058  0549  00F0               	movwf	I2C_Master_Write@d
  1059  054A  3000               	movlw	0
  1060  054B  00F1               	movwf	I2C_Master_Write@d+1
  1061  054C  120A  118A  2187  120A  118A  	fcall	_I2C_Master_Write
  1062  0551                     l1698:	
  1063                           
  1064                           ;Lab5LCDmaster.c: 91:         temp = I2C_Master_Read(0);
  1065  0551  3000               	movlw	0
  1066  0552  00F0               	movwf	I2C_Master_Read@a
  1067  0553  00F1               	movwf	I2C_Master_Read@a+1
  1068  0554  120A  118A  2265  120A  118A  	fcall	_I2C_Master_Read
  1069  0559  0871               	movf	?_I2C_Master_Read+1,w
  1070  055A  1283               	bcf	3,5	;RP0=0, select bank0
  1071  055B  1303               	bcf	3,6	;RP1=0, select bank0
  1072  055C  00C4               	movwf	main@temp+1
  1073  055D  0870               	movf	?_I2C_Master_Read,w
  1074  055E  00C3               	movwf	main@temp
  1075  055F                     l1700:	
  1076                           
  1077                           ;Lab5LCDmaster.c: 92:         I2C_Master_Stop();
  1078  055F  120A  118A  217E  120A  118A  	fcall	_I2C_Master_Stop
  1079  0564                     l1702:	
  1080                           
  1081                           ;Lab5LCDmaster.c: 93:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1082  0564  301A               	movlw	26
  1083  0565  1283               	bcf	3,5	;RP0=0, select bank0
  1084  0566  1303               	bcf	3,6	;RP1=0, select bank0
  1085  0567  00B0               	movwf	??_main+1
  1086  0568  30F7               	movlw	247
  1087  0569  00AF               	movwf	??_main
  1088  056A                     u1197:	
  1089  056A  0BAF               	decfsz	??_main,f
  1090  056B  2D6A               	goto	u1197
  1091  056C  0BB0               	decfsz	??_main+1,f
  1092  056D  2D6A               	goto	u1197
  1093  056E  2D6F               	nop2
  1094  056F                     l1704:	
  1095                           
  1096                           ;Lab5LCDmaster.c: 95:         sprintf(savechain, "%3.1i",vpot1);
  1097  056F  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1098  0570  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0571  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0572  00AF               	movwf	??_main
  1101  0573  082F               	movf	??_main,w
  1102  0574  00A0               	movwf	sprintf@f
  1103  0575  0846               	movf	main@vpot1+1,w
  1104  0576  00A2               	movwf	?_sprintf+2
  1105  0577  0845               	movf	main@vpot1,w
  1106  0578  00A1               	movwf	?_sprintf+1
  1107  0579  3031               	movlw	(low (main@savechain| 0))& (0+255)
  1108  057A  120A  118A  25F5  120A  118A  	fcall	_sprintf
  1109  057F                     l1706:	
  1110                           
  1111                           ;Lab5LCDmaster.c: 96:         setLCD(2,1);
  1112  057F  3002               	movlw	2
  1113  0580  00F4               	movwf	setLCD@V
  1114  0581  3000               	movlw	0
  1115  0582  00F5               	movwf	setLCD@V+1
  1116  0583  3001               	movlw	1
  1117  0584  00F6               	movwf	setLCD@M
  1118  0585  3000               	movlw	0
  1119  0586  00F7               	movwf	setLCD@M+1
  1120  0587  120A  118A  223C  120A  118A  	fcall	_setLCD
  1121  058C                     l1708:	
  1122                           
  1123                           ;Lab5LCDmaster.c: 98:         escribirLCD(savechain);
  1124  058C  3031               	movlw	(low (main@savechain| 0))& (0+255)
  1125  058D  00F2               	movwf	escribirLCD@V
  1126  058E  3000               	movlw	0
  1127  058F  00F3               	movwf	escribirLCD@V+1
  1128  0590  120A  118A  2305  120A  118A  	fcall	_escribirLCD
  1129  0595                     l1710:	
  1130                           
  1131                           ;Lab5LCDmaster.c: 100:         sprintf(savechain, "%2.1i",vcont1);
  1132  0595  301C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1133  0596  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0597  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0598  00AF               	movwf	??_main
  1136  0599  082F               	movf	??_main,w
  1137  059A  00A0               	movwf	sprintf@f
  1138  059B  0842               	movf	main@vcont1+1,w
  1139  059C  00A2               	movwf	?_sprintf+2
  1140  059D  0841               	movf	main@vcont1,w
  1141  059E  00A1               	movwf	?_sprintf+1
  1142  059F  3031               	movlw	(low (main@savechain| 0))& (0+255)
  1143  05A0  120A  118A  25F5  120A  118A  	fcall	_sprintf
  1144  05A5                     l1712:	
  1145                           
  1146                           ;Lab5LCDmaster.c: 101:         setLCD(2,8);
  1147  05A5  3002               	movlw	2
  1148  05A6  00F4               	movwf	setLCD@V
  1149  05A7  3000               	movlw	0
  1150  05A8  00F5               	movwf	setLCD@V+1
  1151  05A9  3008               	movlw	8
  1152  05AA  00F6               	movwf	setLCD@M
  1153  05AB  3000               	movlw	0
  1154  05AC  00F7               	movwf	setLCD@M+1
  1155  05AD  120A  118A  223C  120A  118A  	fcall	_setLCD
  1156  05B2                     l1714:	
  1157                           
  1158                           ;Lab5LCDmaster.c: 103:         escribirLCD(savechain);
  1159  05B2  3031               	movlw	(low (main@savechain| 0))& (0+255)
  1160  05B3  00F2               	movwf	escribirLCD@V
  1161  05B4  3000               	movlw	0
  1162  05B5  00F3               	movwf	escribirLCD@V+1
  1163  05B6  120A  118A  2305  120A  118A  	fcall	_escribirLCD
  1164  05BB                     l1716:	
  1165                           
  1166                           ;Lab5LCDmaster.c: 105:         sprintf(savechain, "%3.1i",temp);
  1167  05BB  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1168  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1169  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1170  05BE  00AF               	movwf	??_main
  1171  05BF  082F               	movf	??_main,w
  1172  05C0  00A0               	movwf	sprintf@f
  1173  05C1  0844               	movf	main@temp+1,w
  1174  05C2  00A2               	movwf	?_sprintf+2
  1175  05C3  0843               	movf	main@temp,w
  1176  05C4  00A1               	movwf	?_sprintf+1
  1177  05C5  3031               	movlw	(low (main@savechain| 0))& (0+255)
  1178  05C6  120A  118A  25F5  120A  118A  	fcall	_sprintf
  1179  05CB                     l1718:	
  1180                           
  1181                           ;Lab5LCDmaster.c: 109:         setLCD(2,12);
  1182  05CB  3002               	movlw	2
  1183  05CC  00F4               	movwf	setLCD@V
  1184  05CD  3000               	movlw	0
  1185  05CE  00F5               	movwf	setLCD@V+1
  1186  05CF  300C               	movlw	12
  1187  05D0  00F6               	movwf	setLCD@M
  1188  05D1  3000               	movlw	0
  1189  05D2  00F7               	movwf	setLCD@M+1
  1190  05D3  120A  118A  223C  120A  118A  	fcall	_setLCD
  1191  05D8                     l1720:	
  1192                           
  1193                           ;Lab5LCDmaster.c: 110:         escribirLCD(savechain);
  1194  05D8  3031               	movlw	(low (main@savechain| 0))& (0+255)
  1195  05D9  00F2               	movwf	escribirLCD@V
  1196  05DA  3000               	movlw	0
  1197  05DB  00F3               	movwf	escribirLCD@V+1
  1198  05DC  120A  118A  2305  120A  118A  	fcall	_escribirLCD
  1199  05E1                     l1722:	
  1200                           
  1201                           ;Lab5LCDmaster.c: 111:         charLCD(223);
  1202  05E1  30DF               	movlw	223
  1203  05E2  120A  118A  219E  120A  118A  	fcall	_charLCD
  1204  05E7                     l1724:	
  1205                           
  1206                           ;Lab5LCDmaster.c: 112:         charLCD('C');
  1207  05E7  3043               	movlw	67
  1208  05E8  120A  118A  219E  120A  118A  	fcall	_charLCD
  1209  05ED                     l1726:	
  1210                           
  1211                           ;Lab5LCDmaster.c: 115:         PORTA = vpot1;
  1212  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  1213  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  1214  05EF  0845               	movf	main@vpot1,w
  1215  05F0  0085               	movwf	5	;volatile
  1216  05F1  2CC4               	goto	l1664
  1217  05F2  120A  118A  2800   	ljmp	start
  1218  05F5                     __end_of_main:	
  1219                           
  1220                           	psect	text1
  1221  03F1                     __ptext1:	
  1222 ;; *************** function _startLCD *****************
  1223 ;; Defined at:
  1224 ;;		line 32 in file "LCD.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0, pclath, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1238 ;;      Params:         0       0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0
  1240 ;;      Temps:          2       0       0       0       0
  1241 ;;      Totals:         2       0       0       0       0
  1242 ;;Total ram usage:        2 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    1
  1245 ;; This function calls:
  1246 ;;		_enviardatos
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _startLCD
  1254  03F1                     _startLCD:	
  1255  03F1                     l1436:	
  1256                           ;incstack = 0
  1257                           ; Regs used in _startLCD: [wreg+status,2+status,0+pclath+cstack]
  1258                           
  1259                           
  1260                           ;LCD.c: 33:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1261  03F1  3034               	movlw	52
  1262  03F2  00F5               	movwf	??_startLCD+1
  1263  03F3  30F1               	movlw	241
  1264  03F4  00F4               	movwf	??_startLCD
  1265  03F5                     u1207:	
  1266  03F5  0BF4               	decfsz	??_startLCD,f
  1267  03F6  2BF5               	goto	u1207
  1268  03F7  0BF5               	decfsz	??_startLCD+1,f
  1269  03F8  2BF5               	goto	u1207
  1270  03F9  2BFA               	nop2
  1271  03FA                     l1438:	
  1272                           
  1273                           ;LCD.c: 34:     enviardatos(0x30);
  1274  03FA  3030               	movlw	48
  1275  03FB  00F0               	movwf	enviardatos@crack
  1276  03FC  3000               	movlw	0
  1277  03FD  00F1               	movwf	enviardatos@crack+1
  1278  03FE  120A  118A  2215  120A  118A  	fcall	_enviardatos
  1279  0403                     l1440:	
  1280                           
  1281                           ;LCD.c: 35:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1282  0403  300D               	movlw	13
  1283  0404  00F5               	movwf	??_startLCD+1
  1284  0405  30FB               	movlw	251
  1285  0406  00F4               	movwf	??_startLCD
  1286  0407                     u1217:	
  1287  0407  0BF4               	decfsz	??_startLCD,f
  1288  0408  2C07               	goto	u1217
  1289  0409  0BF5               	decfsz	??_startLCD+1,f
  1290  040A  2C07               	goto	u1217
  1291  040B  2C0C               	nop2
  1292                           
  1293                           ;LCD.c: 36:     enviardatos(0x30);
  1294  040C  3030               	movlw	48
  1295  040D  00F0               	movwf	enviardatos@crack
  1296  040E  3000               	movlw	0
  1297  040F  00F1               	movwf	enviardatos@crack+1
  1298  0410  120A  118A  2215  120A  118A  	fcall	_enviardatos
  1299  0415                     l1442:	
  1300                           
  1301                           ;LCD.c: 37:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1302  0415  3042               	movlw	66
  1303  0416  00F4               	movwf	??_startLCD
  1304  0417                     u1227:	
  1305  0417  0BF4               	decfsz	??_startLCD,f
  1306  0418  2C17               	goto	u1227
  1307  0419  0000               	nop
  1308  041A                     l1444:	
  1309                           
  1310                           ;LCD.c: 38:     enviardatos(0x30);
  1311  041A  3030               	movlw	48
  1312  041B  00F0               	movwf	enviardatos@crack
  1313  041C  3000               	movlw	0
  1314  041D  00F1               	movwf	enviardatos@crack+1
  1315  041E  120A  118A  2215  120A  118A  	fcall	_enviardatos
  1316                           
  1317                           ;LCD.c: 39:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1318  0423  3042               	movlw	66
  1319  0424  00F4               	movwf	??_startLCD
  1320  0425                     u1237:	
  1321  0425  0BF4               	decfsz	??_startLCD,f
  1322  0426  2C25               	goto	u1237
  1323  0427  0000               	nop
  1324  0428                     l1446:	
  1325                           
  1326                           ;LCD.c: 40:     enviardatos(0x38);
  1327  0428  3038               	movlw	56
  1328  0429  00F0               	movwf	enviardatos@crack
  1329  042A  3000               	movlw	0
  1330  042B  00F1               	movwf	enviardatos@crack+1
  1331  042C  120A  118A  2215  120A  118A  	fcall	_enviardatos
  1332  0431                     l1448:	
  1333                           
  1334                           ;LCD.c: 41:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  1335  0431  3027               	movlw	39
  1336  0432  00F4               	movwf	??_startLCD
  1337  0433                     u1247:	
  1338  0433  0BF4               	decfsz	??_startLCD,f
  1339  0434  2C33               	goto	u1247
  1340  0435  2C36               	nop2
  1341                           
  1342                           ;LCD.c: 42:     enviardatos(0x08);
  1343  0436  3008               	movlw	8
  1344  0437  00F0               	movwf	enviardatos@crack
  1345  0438  3000               	movlw	0
  1346  0439  00F1               	movwf	enviardatos@crack+1
  1347  043A  120A  118A  2215  120A  118A  	fcall	_enviardatos
  1348  043F                     l1450:	
  1349                           
  1350                           ;LCD.c: 43:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  1351  043F  3027               	movlw	39
  1352  0440  00F4               	movwf	??_startLCD
  1353  0441                     u1257:	
  1354  0441  0BF4               	decfsz	??_startLCD,f
  1355  0442  2C41               	goto	u1257
  1356  0443  2C44               	nop2
  1357  0444                     l1452:	
  1358                           
  1359                           ;LCD.c: 44:     enviardatos(0x01);
  1360  0444  3001               	movlw	1
  1361  0445  00F0               	movwf	enviardatos@crack
  1362  0446  3000               	movlw	0
  1363  0447  00F1               	movwf	enviardatos@crack+1
  1364  0448  120A  118A  2215  120A  118A  	fcall	_enviardatos
  1365                           
  1366                           ;LCD.c: 45:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1367  044D  300D               	movlw	13
  1368  044E  00F5               	movwf	??_startLCD+1
  1369  044F  30FB               	movlw	251
  1370  0450  00F4               	movwf	??_startLCD
  1371  0451                     u1267:	
  1372  0451  0BF4               	decfsz	??_startLCD,f
  1373  0452  2C51               	goto	u1267
  1374  0453  0BF5               	decfsz	??_startLCD+1,f
  1375  0454  2C51               	goto	u1267
  1376  0455  2C56               	nop2
  1377  0456                     l1454:	
  1378                           
  1379                           ;LCD.c: 46:     enviardatos(0x06);
  1380  0456  3006               	movlw	6
  1381  0457  00F0               	movwf	enviardatos@crack
  1382  0458  3000               	movlw	0
  1383  0459  00F1               	movwf	enviardatos@crack+1
  1384  045A  120A  118A  2215  120A  118A  	fcall	_enviardatos
  1385  045F                     l1456:	
  1386                           
  1387                           ;LCD.c: 47:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  1388  045F  3027               	movlw	39
  1389  0460  00F4               	movwf	??_startLCD
  1390  0461                     u1277:	
  1391  0461  0BF4               	decfsz	??_startLCD,f
  1392  0462  2C61               	goto	u1277
  1393  0463  2C64               	nop2
  1394                           
  1395                           ;LCD.c: 48:     enviardatos(0x0C);
  1396  0464  300C               	movlw	12
  1397  0465  00F0               	movwf	enviardatos@crack
  1398  0466  3000               	movlw	0
  1399  0467  00F1               	movwf	enviardatos@crack+1
  1400  0468  120A  118A  2215  120A  118A  	fcall	_enviardatos
  1401  046D                     l1458:	
  1402                           
  1403                           ;LCD.c: 49:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  1404  046D  3027               	movlw	39
  1405  046E  00F4               	movwf	??_startLCD
  1406  046F                     u1287:	
  1407  046F  0BF4               	decfsz	??_startLCD,f
  1408  0470  2C6F               	goto	u1287
  1409  0471  2C72               	nop2
  1410  0472                     l17:	
  1411  0472  0008               	return
  1412  0473                     __end_of_startLCD:	
  1413                           
  1414                           	psect	text2
  1415  05F5                     __ptext2:	
  1416 ;; *************** function _sprintf *****************
  1417 ;; Defined at:
  1418 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  sp              1    wreg     PTR unsigned char 
  1421 ;;		 -> main@savechain(16), 
  1422 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1423 ;;		 -> STR_4(6), STR_3(6), STR_2(6), 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  sp              1   10[BANK0 ] PTR unsigned char 
  1426 ;;		 -> main@savechain(16), 
  1427 ;;  tmpval          4    0        struct .
  1428 ;;  width           2   11[BANK0 ] int 
  1429 ;;  val             2    8[BANK0 ] unsigned int 
  1430 ;;  cp              2    0        PTR const unsigned char 
  1431 ;;  len             2    0        unsigned int 
  1432 ;;  c               1   14[BANK0 ] unsigned char 
  1433 ;;  prec            1   13[BANK0 ] char 
  1434 ;;  flag            1    7[BANK0 ] unsigned char 
  1435 ;;  ap              1    6[BANK0 ] PTR void [1]
  1436 ;;		 -> ?_sprintf(2), 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  2    0[BANK0 ] int 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1446 ;;      Params:         0       3       0       0       0
  1447 ;;      Locals:         0       9       0       0       0
  1448 ;;      Temps:          0       3       0       0       0
  1449 ;;      Totals:         0      15       0       0       0
  1450 ;;Total ram usage:       15 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    1
  1453 ;; This function calls:
  1454 ;;		___bmul
  1455 ;;		___lwdiv
  1456 ;;		___lwmod
  1457 ;;		___wmul
  1458 ;;		_isdigit
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _sprintf
  1466  05F5                     _sprintf:	
  1467                           
  1468                           ;incstack = 0
  1469                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1470                           ;sprintf@sp stored from wreg
  1471  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1472  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1473  05F7  00AA               	movwf	sprintf@sp
  1474  05F8                     l1524:	
  1475                           
  1476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;
  1477  05F8  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1478  05F9  00A3               	movwf	??_sprintf
  1479  05FA  0823               	movf	??_sprintf,w
  1480  05FB  00A6               	movwf	sprintf@ap
  1481                           
  1482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1483  05FC  2FE5               	goto	l1640
  1484  05FD                     l1526:	
  1485                           
  1486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1487  05FD  3025               	movlw	37
  1488  05FE  062E               	xorwf	sprintf@c,w
  1489  05FF  1903               	btfsc	3,2
  1490  0600  2E02               	goto	u961
  1491  0601  2E03               	goto	u960
  1492  0602                     u961:	
  1493  0602  2E0F               	goto	l1532
  1494  0603                     u960:	
  1495  0603                     l1528:	
  1496                           
  1497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1498  0603  082E               	movf	sprintf@c,w
  1499  0604  00A3               	movwf	??_sprintf
  1500  0605  082A               	movf	sprintf@sp,w
  1501  0606  0084               	movwf	4
  1502  0607  0823               	movf	??_sprintf,w
  1503  0608  1383               	bcf	3,7	;select IRP bank0
  1504  0609  0080               	movwf	0
  1505  060A                     l1530:	
  1506  060A  3001               	movlw	1
  1507  060B  00A3               	movwf	??_sprintf
  1508  060C  0823               	movf	??_sprintf,w
  1509  060D  07AA               	addwf	sprintf@sp,f
  1510                           
  1511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1512  060E  2FE5               	goto	l1640
  1513  060F                     l1532:	
  1514                           
  1515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  1516  060F  01AB               	clrf	sprintf@width
  1517  0610  01AC               	clrf	sprintf@width+1
  1518                           
  1519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1520  0611  01A7               	clrf	sprintf@flag
  1521  0612                     l1534:	
  1522                           
  1523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  1524  0612  0820               	movf	sprintf@f,w
  1525  0613  0084               	movwf	4
  1526  0614  120A  118A  200D  120A  118A  	fcall	stringdir
  1527  0619  120A  118A  21AE  120A  118A  	fcall	_isdigit
  1528  061E  1C03               	btfss	3,0
  1529  061F  2E21               	goto	u971
  1530  0620  2E22               	goto	u970
  1531  0621                     u971:	
  1532  0621  2E62               	goto	l1546
  1533  0622                     u970:	
  1534  0622                     l1536:	
  1535                           
  1536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  1537  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0624  01AB               	clrf	sprintf@width
  1540  0625  01AC               	clrf	sprintf@width+1
  1541  0626                     l1538:	
  1542                           
  1543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  1544  0626  300A               	movlw	10
  1545  0627  00F0               	movwf	___wmul@multiplier
  1546  0628  3000               	movlw	0
  1547  0629  00F1               	movwf	___wmul@multiplier+1
  1548  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1549  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1550  062C  082C               	movf	sprintf@width+1,w
  1551  062D  00F3               	movwf	___wmul@multiplicand+1
  1552  062E  082B               	movf	sprintf@width,w
  1553  062F  00F2               	movwf	___wmul@multiplicand
  1554  0630  120A  118A  21F0  120A  118A  	fcall	___wmul
  1555  0635  0871               	movf	?___wmul+1,w
  1556  0636  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0637  1303               	bcf	3,6	;RP1=0, select bank0
  1558  0638  00AC               	movwf	sprintf@width+1
  1559  0639  0870               	movf	?___wmul,w
  1560  063A  00AB               	movwf	sprintf@width
  1561  063B                     l1540:	
  1562                           
  1563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  1564  063B  0820               	movf	sprintf@f,w
  1565  063C  0084               	movwf	4
  1566  063D  120A  118A  200D  120A  118A  	fcall	stringdir
  1567  0642  3ED0               	addlw	208
  1568  0643  00A3               	movwf	??_sprintf
  1569  0644  30FF               	movlw	255
  1570  0645  1803               	skipnc
  1571  0646  3000               	movlw	0
  1572  0647  00A4               	movwf	??_sprintf+1
  1573  0648  0823               	movf	??_sprintf,w
  1574  0649  07AB               	addwf	sprintf@width,f
  1575  064A  1803               	skipnc
  1576  064B  0AAC               	incf	sprintf@width+1,f
  1577  064C  0824               	movf	??_sprintf+1,w
  1578  064D  07AC               	addwf	sprintf@width+1,f
  1579  064E                     l1542:	
  1580  064E  3001               	movlw	1
  1581  064F  00A3               	movwf	??_sprintf
  1582  0650  0823               	movf	??_sprintf,w
  1583  0651  07A0               	addwf	sprintf@f,f
  1584  0652                     l1544:	
  1585                           
  1586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  1587  0652  0820               	movf	sprintf@f,w
  1588  0653  0084               	movwf	4
  1589  0654  120A  118A  200D  120A  118A  	fcall	stringdir
  1590  0659  120A  118A  21AE  120A  118A  	fcall	_isdigit
  1591  065E  1803               	btfsc	3,0
  1592  065F  2E61               	goto	u981
  1593  0660  2E62               	goto	u980
  1594  0661                     u981:	
  1595  0661  2E26               	goto	l1538
  1596  0662                     u980:	
  1597  0662                     l1546:	
  1598                           
  1599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  1600  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1602  0664  0820               	movf	sprintf@f,w
  1603  0665  0084               	movwf	4
  1604  0666  120A  118A  200D  120A  118A  	fcall	stringdir
  1605  066B  3A2E               	xorlw	46
  1606  066C  1D03               	skipz
  1607  066D  2E6F               	goto	u991
  1608  066E  2E70               	goto	u990
  1609  066F                     u991:	
  1610  066F  2EA7               	goto	l1560
  1611  0670                     u990:	
  1612  0670                     l1548:	
  1613                           
  1614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  1615  0670  3001               	movlw	1
  1616  0671  00A3               	movwf	??_sprintf
  1617  0672  0823               	movf	??_sprintf,w
  1618  0673  07A0               	addwf	sprintf@f,f
  1619  0674                     l1550:	
  1620                           
  1621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  1622  0674  01AD               	clrf	sprintf@prec
  1623                           
  1624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1625  0675  2E96               	goto	l1558
  1626  0676                     l1552:	
  1627                           
  1628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  1629  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1630  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1631  0678  082D               	movf	sprintf@prec,w
  1632  0679  00A3               	movwf	??_sprintf
  1633  067A  0823               	movf	??_sprintf,w
  1634  067B  00F0               	movwf	___bmul@multiplicand
  1635  067C  300A               	movlw	10
  1636  067D  120A  118A  21C0  120A  118A  	fcall	___bmul
  1637  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1639  0684  00A4               	movwf	??_sprintf+1
  1640  0685  0824               	movf	??_sprintf+1,w
  1641  0686  00AD               	movwf	sprintf@prec
  1642  0687                     l1554:	
  1643                           
  1644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  1645  0687  0820               	movf	sprintf@f,w
  1646  0688  0084               	movwf	4
  1647  0689  120A  118A  200D  120A  118A  	fcall	stringdir
  1648  068E  3ED0               	addlw	-48
  1649  068F  00A3               	movwf	??_sprintf
  1650  0690  0823               	movf	??_sprintf,w
  1651  0691  07AD               	addwf	sprintf@prec,f
  1652  0692                     l1556:	
  1653  0692  3001               	movlw	1
  1654  0693  00A3               	movwf	??_sprintf
  1655  0694  0823               	movf	??_sprintf,w
  1656  0695  07A0               	addwf	sprintf@f,f
  1657  0696                     l1558:	
  1658                           
  1659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1660  0696  0820               	movf	sprintf@f,w
  1661  0697  0084               	movwf	4
  1662  0698  120A  118A  200D  120A  118A  	fcall	stringdir
  1663  069D  120A  118A  21AE  120A  118A  	fcall	_isdigit
  1664  06A2  1803               	btfsc	3,0
  1665  06A3  2EA5               	goto	u1001
  1666  06A4  2EA6               	goto	u1000
  1667  06A5                     u1001:	
  1668  06A5  2E76               	goto	l1552
  1669  06A6                     u1000:	
  1670  06A6  2EA8               	goto	l1564
  1671  06A7                     l1560:	
  1672                           
  1673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  1674  06A7  01AD               	clrf	sprintf@prec
  1675  06A8                     l1564:	
  1676  06A8  3001               	movlw	1
  1677  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1678  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1679  06AB  07A0               	addwf	sprintf@f,f
  1680  06AC  30FF               	movlw	-1
  1681  06AD  0720               	addwf	sprintf@f,w
  1682  06AE  0084               	movwf	4
  1683  06AF  120A  118A  200D  120A  118A  	fcall	stringdir
  1684  06B4  00AE               	movwf	sprintf@c
  1685  06B5  00A3               	movwf	??_sprintf
  1686  06B6  01A4               	clrf	??_sprintf+1
  1687                           
  1688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1689                           ; Switch size 1, requested type "simple"
  1690                           ; Number of cases is 1, Range of values is 0 to 0
  1691                           ; switch strategies available:
  1692                           ; Name         Instructions Cycles
  1693                           ; simple_byte            4     3 (average)
  1694                           ; direct_byte           11     8 (fixed)
  1695                           ; jumptable            260     6 (fixed)
  1696                           ;	Chosen strategy is simple_byte
  1697  06B7  0824               	movf	??_sprintf+1,w
  1698  06B8  3A00               	xorlw	0	; case 0
  1699  06B9  1903               	skipnz
  1700  06BA  2EBC               	goto	l1762
  1701  06BB  2FE5               	goto	l1640
  1702  06BC                     l1762:	
  1703                           
  1704                           ; Switch size 1, requested type "simple"
  1705                           ; Number of cases is 3, Range of values is 0 to 105
  1706                           ; switch strategies available:
  1707                           ; Name         Instructions Cycles
  1708                           ; simple_byte           10     6 (average)
  1709                           ; jumptable            260     6 (fixed)
  1710                           ;	Chosen strategy is simple_byte
  1711  06BC  0823               	movf	??_sprintf,w
  1712  06BD  3A00               	xorlw	0	; case 0
  1713  06BE  1903               	skipnz
  1714  06BF  2FF7               	goto	l1642
  1715  06C0  3A64               	xorlw	100	; case 100
  1716  06C1  1903               	skipnz
  1717  06C2  2EC7               	goto	l1566
  1718  06C3  3A0D               	xorlw	13	; case 105
  1719  06C4  1903               	skipnz
  1720  06C5  2EC7               	goto	l1566
  1721  06C6  2FE5               	goto	l1640
  1722  06C7                     l1566:	
  1723                           
  1724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1725  06C7  0826               	movf	sprintf@ap,w
  1726  06C8  0084               	movwf	4
  1727  06C9  1383               	bcf	3,7	;select IRP bank0
  1728  06CA  0800               	movf	0,w
  1729  06CB  00A8               	movwf	sprintf@val
  1730  06CC  0A84               	incf	4,f
  1731  06CD  0800               	movf	0,w
  1732  06CE  00A9               	movwf	sprintf@val+1
  1733  06CF                     l1568:	
  1734  06CF  3002               	movlw	2
  1735  06D0  00A3               	movwf	??_sprintf
  1736  06D1  0823               	movf	??_sprintf,w
  1737  06D2  07A6               	addwf	sprintf@ap,f
  1738  06D3                     l1570:	
  1739                           
  1740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  1741  06D3  1FA9               	btfss	sprintf@val+1,7
  1742  06D4  2ED6               	goto	u1011
  1743  06D5  2ED7               	goto	u1010
  1744  06D6                     u1011:	
  1745  06D6  2EE0               	goto	l1576
  1746  06D7                     u1010:	
  1747  06D7                     l1572:	
  1748                           
  1749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  1750  06D7  3003               	movlw	3
  1751  06D8  00A3               	movwf	??_sprintf
  1752  06D9  0823               	movf	??_sprintf,w
  1753  06DA  04A7               	iorwf	sprintf@flag,f
  1754  06DB                     l1574:	
  1755                           
  1756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  1757  06DB  09A8               	comf	sprintf@val,f
  1758  06DC  09A9               	comf	sprintf@val+1,f
  1759  06DD  0AA8               	incf	sprintf@val,f
  1760  06DE  1903               	skipnz
  1761  06DF  0AA9               	incf	sprintf@val+1,f
  1762  06E0                     l1576:	
  1763                           
  1764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(pr
      +                          ec == 0 && val == 0)
  1765  06E0  082D               	movf	sprintf@prec,w
  1766  06E1  1D03               	btfss	3,2
  1767  06E2  2EE4               	goto	u1021
  1768  06E3  2EE5               	goto	u1020
  1769  06E4                     u1021:	
  1770  06E4  2EEF               	goto	l1582
  1771  06E5                     u1020:	
  1772  06E5                     l1578:	
  1773  06E5  0828               	movf	sprintf@val,w
  1774  06E6  0429               	iorwf	sprintf@val+1,w
  1775  06E7  1D03               	btfss	3,2
  1776  06E8  2EEA               	goto	u1031
  1777  06E9  2EEB               	goto	u1030
  1778  06EA                     u1031:	
  1779  06EA  2EEF               	goto	l1582
  1780  06EB                     u1030:	
  1781  06EB                     l1580:	
  1782                           
  1783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
  1784  06EB  3001               	movlw	1
  1785  06EC  00A3               	movwf	??_sprintf
  1786  06ED  0823               	movf	??_sprintf,w
  1787  06EE  07AD               	addwf	sprintf@prec,f
  1788  06EF                     l1582:	
  1789                           
  1790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    fo
      +                          r(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1791  06EF  01AE               	clrf	sprintf@c
  1792  06F0  0AAE               	incf	sprintf@c,f
  1793  06F1                     l1586:	
  1794                           
  1795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  1796  06F1  082E               	movf	sprintf@c,w
  1797  06F2  00A3               	movwf	??_sprintf
  1798  06F3  0723               	addwf	??_sprintf,w
  1799  06F4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1800  06F5  0084               	movwf	4
  1801  06F6  120A  118A  200D  120A  118A  	fcall	stringdir
  1802  06FB  00A4               	movwf	??_sprintf+1
  1803  06FC  120A  118A  200D  120A  118A  	fcall	stringdir
  1804  0701  00A5               	movwf	??_sprintf+2
  1805  0702  0825               	movf	??_sprintf+2,w
  1806  0703  0229               	subwf	sprintf@val+1,w
  1807  0704  1D03               	skipz
  1808  0705  2F08               	goto	u1045
  1809  0706  0824               	movf	??_sprintf+1,w
  1810  0707  0228               	subwf	sprintf@val,w
  1811  0708                     u1045:	
  1812  0708  1803               	skipnc
  1813  0709  2F0B               	goto	u1041
  1814  070A  2F0C               	goto	u1040
  1815  070B                     u1041:	
  1816  070B  2F0D               	goto	l1590
  1817  070C                     u1040:	
  1818  070C  2F17               	goto	l1592
  1819  070D                     l1590:	
  1820  070D  3001               	movlw	1
  1821  070E  00A3               	movwf	??_sprintf
  1822  070F  0823               	movf	??_sprintf,w
  1823  0710  07AE               	addwf	sprintf@c,f
  1824  0711  3005               	movlw	5
  1825  0712  062E               	xorwf	sprintf@c,w
  1826  0713  1D03               	btfss	3,2
  1827  0714  2F16               	goto	u1051
  1828  0715  2F17               	goto	u1050
  1829  0716                     u1051:	
  1830  0716  2EF1               	goto	l1586
  1831  0717                     u1050:	
  1832  0717                     l1592:	
  1833                           
  1834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
  1835  0717  082D               	movf	sprintf@prec,w
  1836  0718  00A3               	movwf	??_sprintf
  1837  0719  01A4               	clrf	??_sprintf+1
  1838  071A  1BA3               	btfsc	??_sprintf,7
  1839  071B  03A4               	decf	??_sprintf+1,f
  1840  071C  0824               	movf	??_sprintf+1,w
  1841  071D  3A80               	xorlw	128
  1842  071E  3C80               	sublw	128
  1843  071F  1D03               	skipz
  1844  0720  2F23               	goto	u1065
  1845  0721  0823               	movf	??_sprintf,w
  1846  0722  022E               	subwf	sprintf@c,w
  1847  0723                     u1065:	
  1848  0723  1803               	skipnc
  1849  0724  2F26               	goto	u1061
  1850  0725  2F27               	goto	u1060
  1851  0726                     u1061:	
  1852  0726  2F2E               	goto	l1596
  1853  0727                     u1060:	
  1854  0727                     l1594:	
  1855                           
  1856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1366:    c 
      +                          = (char)prec;
  1857  0727  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0728  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0729  082D               	movf	sprintf@prec,w
  1860  072A  00A3               	movwf	??_sprintf
  1861  072B  0823               	movf	??_sprintf,w
  1862  072C  00AE               	movwf	sprintf@c
  1863  072D  2F48               	goto	l1600
  1864  072E                     l1596:	
  1865  072E  1283               	bcf	3,5	;RP0=0, select bank0
  1866  072F  1303               	bcf	3,6	;RP1=0, select bank0
  1867  0730  082D               	movf	sprintf@prec,w
  1868  0731  00A3               	movwf	??_sprintf
  1869  0732  01A4               	clrf	??_sprintf+1
  1870  0733  1BA3               	btfsc	??_sprintf,7
  1871  0734  03A4               	decf	??_sprintf+1,f
  1872  0735  0824               	movf	??_sprintf+1,w
  1873  0736  3A80               	xorlw	128
  1874  0737  00A5               	movwf	??_sprintf+2
  1875  0738  3080               	movlw	128
  1876  0739  0225               	subwf	??_sprintf+2,w
  1877  073A  1D03               	skipz
  1878  073B  2F3E               	goto	u1075
  1879  073C  082E               	movf	sprintf@c,w
  1880  073D  0223               	subwf	??_sprintf,w
  1881  073E                     u1075:	
  1882  073E  1803               	skipnc
  1883  073F  2F41               	goto	u1071
  1884  0740  2F42               	goto	u1070
  1885  0741                     u1071:	
  1886  0741  2F48               	goto	l1600
  1887  0742                     u1070:	
  1888  0742                     l1598:	
  1889                           
  1890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1368:    pr
      +                          ec = c;
  1891  0742  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0743  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0744  082E               	movf	sprintf@c,w
  1894  0745  00A3               	movwf	??_sprintf
  1895  0746  0823               	movf	??_sprintf,w
  1896  0747  00AD               	movwf	sprintf@prec
  1897  0748                     l1600:	
  1898                           
  1899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1371:   if(
      +                          width && flag & 0x03)
  1900  0748  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0749  1303               	bcf	3,6	;RP1=0, select bank0
  1902  074A  082B               	movf	sprintf@width,w
  1903  074B  042C               	iorwf	sprintf@width+1,w
  1904  074C  1903               	btfsc	3,2
  1905  074D  2F4F               	goto	u1081
  1906  074E  2F50               	goto	u1080
  1907  074F                     u1081:	
  1908  074F  2F5C               	goto	l1612
  1909  0750                     u1080:	
  1910  0750                     l1602:	
  1911  0750  0827               	movf	sprintf@flag,w
  1912  0751  3903               	andlw	3
  1913  0752  1903               	btfsc	3,2
  1914  0753  2F55               	goto	u1091
  1915  0754  2F56               	goto	u1090
  1916  0755                     u1091:	
  1917  0755  2F5C               	goto	l1612
  1918  0756                     u1090:	
  1919  0756                     l1604:	
  1920                           
  1921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1372:    wi
      +                          dth--;
  1922  0756  30FF               	movlw	255
  1923  0757  07AB               	addwf	sprintf@width,f
  1924  0758  1803               	skipnc
  1925  0759  0AAC               	incf	sprintf@width+1,f
  1926  075A  30FF               	movlw	255
  1927  075B  07AC               	addwf	sprintf@width+1,f
  1928  075C                     l1612:	
  1929                           
  1930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
  1931  075C  082C               	movf	sprintf@width+1,w
  1932  075D  3A80               	xorlw	128
  1933  075E  3C80               	sublw	128
  1934  075F  1D03               	skipz
  1935  0760  2F63               	goto	u1105
  1936  0761  082B               	movf	sprintf@width,w
  1937  0762  022E               	subwf	sprintf@c,w
  1938  0763                     u1105:	
  1939  0763  1803               	skipnc
  1940  0764  2F66               	goto	u1101
  1941  0765  2F67               	goto	u1100
  1942  0766                     u1101:	
  1943  0766  2F73               	goto	l1616
  1944  0767                     u1100:	
  1945  0767                     l1614:	
  1946                           
  1947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
  1948  0767  1283               	bcf	3,5	;RP0=0, select bank0
  1949  0768  1303               	bcf	3,6	;RP1=0, select bank0
  1950  0769  082E               	movf	sprintf@c,w
  1951  076A  00A3               	movwf	??_sprintf
  1952  076B  01A4               	clrf	??_sprintf+1
  1953  076C  0823               	movf	??_sprintf,w
  1954  076D  02AB               	subwf	sprintf@width,f
  1955  076E  0824               	movf	??_sprintf+1,w
  1956  076F  1C03               	skipc
  1957  0770  03AC               	decf	sprintf@width+1,f
  1958  0771  02AC               	subwf	sprintf@width+1,f
  1959  0772  2F77               	goto	l1618
  1960  0773                     l1616:	
  1961                           
  1962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
  1963  0773  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0774  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0775  01AB               	clrf	sprintf@width
  1966  0776  01AC               	clrf	sprintf@width+1
  1967  0777                     l1618:	
  1968                           
  1969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
  1970  0777  082B               	movf	sprintf@width,w
  1971  0778  042C               	iorwf	sprintf@width+1,w
  1972  0779  1903               	btfsc	3,2
  1973  077A  2F7C               	goto	u1111
  1974  077B  2F7D               	goto	u1110
  1975  077C                     u1111:	
  1976  077C  2F94               	goto	l1626
  1977  077D                     u1110:	
  1978  077D                     l1620:	
  1979                           
  1980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
  1981  077D  3020               	movlw	32
  1982  077E  00A3               	movwf	??_sprintf
  1983  077F  082A               	movf	sprintf@sp,w
  1984  0780  0084               	movwf	4
  1985  0781  0823               	movf	??_sprintf,w
  1986  0782  1383               	bcf	3,7	;select IRP bank0
  1987  0783  0080               	movwf	0
  1988  0784                     l1622:	
  1989  0784  3001               	movlw	1
  1990  0785  00A3               	movwf	??_sprintf
  1991  0786  0823               	movf	??_sprintf,w
  1992  0787  07AA               	addwf	sprintf@sp,f
  1993  0788                     l1624:	
  1994  0788  30FF               	movlw	255
  1995  0789  07AB               	addwf	sprintf@width,f
  1996  078A  1803               	skipnc
  1997  078B  0AAC               	incf	sprintf@width+1,f
  1998  078C  30FF               	movlw	255
  1999  078D  07AC               	addwf	sprintf@width+1,f
  2000  078E  082B               	movf	sprintf@width,w
  2001  078F  042C               	iorwf	sprintf@width+1,w
  2002  0790  1D03               	btfss	3,2
  2003  0791  2F93               	goto	u1121
  2004  0792  2F94               	goto	u1120
  2005  0793                     u1121:	
  2006  0793  2F7D               	goto	l1620
  2007  0794                     u1120:	
  2008  0794                     l1626:	
  2009                           
  2010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if
      +                          (flag & 0x03)
  2011  0794  0827               	movf	sprintf@flag,w
  2012  0795  3903               	andlw	3
  2013  0796  1903               	btfsc	3,2
  2014  0797  2F99               	goto	u1131
  2015  0798  2F9A               	goto	u1130
  2016  0799                     u1131:	
  2017  0799  2FDC               	goto	l1638
  2018  079A                     u1130:	
  2019  079A                     l1628:	
  2020                           
  2021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  2022  079A  302D               	movlw	45
  2023  079B  00A3               	movwf	??_sprintf
  2024  079C  082A               	movf	sprintf@sp,w
  2025  079D  0084               	movwf	4
  2026  079E  0823               	movf	??_sprintf,w
  2027  079F  1383               	bcf	3,7	;select IRP bank0
  2028  07A0  0080               	movwf	0
  2029  07A1                     l1630:	
  2030  07A1  3001               	movlw	1
  2031  07A2  00A3               	movwf	??_sprintf
  2032  07A3  0823               	movf	??_sprintf,w
  2033  07A4  07AA               	addwf	sprintf@sp,f
  2034  07A5  2FDC               	goto	l1638
  2035  07A6                     l1632:	
  2036                           
  2037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2038  07A6  300A               	movlw	10
  2039  07A7  00F8               	movwf	___lwmod@divisor
  2040  07A8  3000               	movlw	0
  2041  07A9  00F9               	movwf	___lwmod@divisor+1
  2042  07AA  082D               	movf	sprintf@prec,w
  2043  07AB  00A3               	movwf	??_sprintf
  2044  07AC  0723               	addwf	??_sprintf,w
  2045  07AD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2046  07AE  0084               	movwf	4
  2047  07AF  120A  118A  200D  120A  118A  	fcall	stringdir
  2048  07B4  00F0               	movwf	___lwdiv@divisor
  2049  07B5  120A  118A  200D  120A  118A  	fcall	stringdir
  2050  07BA  00F1               	movwf	___lwdiv@divisor+1
  2051  07BB  0829               	movf	sprintf@val+1,w
  2052  07BC  00F3               	movwf	___lwdiv@dividend+1
  2053  07BD  0828               	movf	sprintf@val,w
  2054  07BE  00F2               	movwf	___lwdiv@dividend
  2055  07BF  120A  118A  2347  120A  118A  	fcall	___lwdiv
  2056  07C4  0871               	movf	?___lwdiv+1,w
  2057  07C5  00FB               	movwf	___lwmod@dividend+1
  2058  07C6  0870               	movf	?___lwdiv,w
  2059  07C7  00FA               	movwf	___lwmod@dividend
  2060  07C8  120A  118A  22CB  120A  118A  	fcall	___lwmod
  2061  07CD  0878               	movf	?___lwmod,w
  2062  07CE  3E30               	addlw	48
  2063  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  2064  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  2065  07D1  00A4               	movwf	??_sprintf+1
  2066  07D2  0824               	movf	??_sprintf+1,w
  2067  07D3  00AE               	movwf	sprintf@c
  2068  07D4                     l1634:	
  2069                           
  2070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  2071  07D4  082E               	movf	sprintf@c,w
  2072  07D5  00A3               	movwf	??_sprintf
  2073  07D6  082A               	movf	sprintf@sp,w
  2074  07D7  0084               	movwf	4
  2075  07D8  0823               	movf	??_sprintf,w
  2076  07D9  1383               	bcf	3,7	;select IRP bank0
  2077  07DA  0080               	movwf	0
  2078  07DB  2FA1               	goto	l1630
  2079  07DC                     l1638:	
  2080                           
  2081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  2082  07DC  30FF               	movlw	255
  2083  07DD  00A3               	movwf	??_sprintf
  2084  07DE  0823               	movf	??_sprintf,w
  2085  07DF  07AD               	addwf	sprintf@prec,f
  2086  07E0  0A2D               	incf	sprintf@prec,w
  2087  07E1  1D03               	btfss	3,2
  2088  07E2  2FE4               	goto	u1141
  2089  07E3  2FE5               	goto	u1140
  2090  07E4                     u1141:	
  2091  07E4  2FA6               	goto	l1632
  2092  07E5                     u1140:	
  2093  07E5                     l1640:	
  2094                           
  2095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  2096  07E5  3001               	movlw	1
  2097  07E6  07A0               	addwf	sprintf@f,f
  2098  07E7  30FF               	movlw	-1
  2099  07E8  0720               	addwf	sprintf@f,w
  2100  07E9  0084               	movwf	4
  2101  07EA  120A  118A  200D  120A  118A  	fcall	stringdir
  2102  07EF  00A3               	movwf	??_sprintf
  2103  07F0  0823               	movf	??_sprintf,w
  2104  07F1  00AE               	movwf	sprintf@c
  2105  07F2  082E               	movf	sprintf@c,w
  2106  07F3  1D03               	btfss	3,2
  2107  07F4  2FF6               	goto	u1151
  2108  07F5  2FF7               	goto	u1150
  2109  07F6                     u1151:	
  2110  07F6  2DFD               	goto	l1526
  2111  07F7                     u1150:	
  2112  07F7                     l1642:	
  2113                           
  2114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  2115  07F7  082A               	movf	sprintf@sp,w
  2116  07F8  0084               	movwf	4
  2117  07F9  1383               	bcf	3,7	;select IRP bank0
  2118  07FA  0180               	clrf	0
  2119  07FB                     l307:	
  2120  07FB  0008               	return
  2121  07FC                     __end_of_sprintf:	
  2122                           
  2123                           	psect	text3
  2124  01AE                     __ptext3:	
  2125 ;; *************** function _isdigit *****************
  2126 ;; Defined at:
  2127 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  c               1    wreg     unsigned char 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  c               1    1[COMMON] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;		None               void
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2141 ;;      Params:         0       0       0       0       0
  2142 ;;      Locals:         2       0       0       0       0
  2143 ;;      Temps:          0       0       0       0       0
  2144 ;;      Totals:         2       0       0       0       0
  2145 ;;Total ram usage:        2 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_sprintf
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           
  2155                           ;psect for function _isdigit
  2156  01AE                     _isdigit:	
  2157                           
  2158                           ;incstack = 0
  2159                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2160                           ;isdigit@c stored from wreg
  2161  01AE  00F1               	movwf	isdigit@c
  2162  01AF                     l1324:	
  2163  01AF  01F0               	clrf	_isdigit$801
  2164  01B0                     l1326:	
  2165  01B0  303A               	movlw	58
  2166  01B1  0271               	subwf	isdigit@c,w
  2167  01B2  1803               	skipnc
  2168  01B3  29B5               	goto	u611
  2169  01B4  29B6               	goto	u610
  2170  01B5                     u611:	
  2171  01B5  29BE               	goto	l1332
  2172  01B6                     u610:	
  2173  01B6                     l1328:	
  2174  01B6  3030               	movlw	48
  2175  01B7  0271               	subwf	isdigit@c,w
  2176  01B8  1C03               	skipc
  2177  01B9  29BB               	goto	u621
  2178  01BA  29BC               	goto	u620
  2179  01BB                     u621:	
  2180  01BB  29BE               	goto	l1332
  2181  01BC                     u620:	
  2182  01BC                     l1330:	
  2183  01BC  01F0               	clrf	_isdigit$801
  2184  01BD  0AF0               	incf	_isdigit$801,f
  2185  01BE                     l1332:	
  2186  01BE  0C70               	rrf	_isdigit$801,w
  2187  01BF                     l758:	
  2188  01BF  0008               	return
  2189  01C0                     __end_of_isdigit:	
  2190                           
  2191                           	psect	text4
  2192  01F0                     __ptext4:	
  2193 ;; *************** function ___wmul *****************
  2194 ;; Defined at:
  2195 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  multiplier      2    0[COMMON] unsigned int 
  2198 ;;  multiplicand    2    2[COMMON] unsigned int 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  product         2    4[COMMON] unsigned int 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  2    0[COMMON] unsigned int 
  2203 ;; Registers used:
  2204 ;;		wreg, status,2, status,0
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2210 ;;      Params:         4       0       0       0       0
  2211 ;;      Locals:         2       0       0       0       0
  2212 ;;      Temps:          0       0       0       0       0
  2213 ;;      Totals:         6       0       0       0       0
  2214 ;;Total ram usage:        6 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_sprintf
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           
  2224                           ;psect for function ___wmul
  2225  01F0                     ___wmul:	
  2226  01F0                     l1336:	
  2227                           ;incstack = 0
  2228                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2229                           
  2230  01F0  01F4               	clrf	___wmul@product
  2231  01F1  01F5               	clrf	___wmul@product+1
  2232  01F2                     l1338:	
  2233  01F2  1C70               	btfss	___wmul@multiplier,0
  2234  01F3  29F5               	goto	u631
  2235  01F4  29F6               	goto	u630
  2236  01F5                     u631:	
  2237  01F5  29FC               	goto	l311
  2238  01F6                     u630:	
  2239  01F6                     l1340:	
  2240  01F6  0872               	movf	___wmul@multiplicand,w
  2241  01F7  07F4               	addwf	___wmul@product,f
  2242  01F8  1803               	skipnc
  2243  01F9  0AF5               	incf	___wmul@product+1,f
  2244  01FA  0873               	movf	___wmul@multiplicand+1,w
  2245  01FB  07F5               	addwf	___wmul@product+1,f
  2246  01FC                     l311:	
  2247  01FC  3001               	movlw	1
  2248  01FD                     u645:	
  2249  01FD  1003               	clrc
  2250  01FE  0DF2               	rlf	___wmul@multiplicand,f
  2251  01FF  0DF3               	rlf	___wmul@multiplicand+1,f
  2252  0200  3EFF               	addlw	-1
  2253  0201  1D03               	skipz
  2254  0202  29FD               	goto	u645
  2255  0203                     l1342:	
  2256  0203  3001               	movlw	1
  2257  0204                     u655:	
  2258  0204  1003               	clrc
  2259  0205  0CF1               	rrf	___wmul@multiplier+1,f
  2260  0206  0CF0               	rrf	___wmul@multiplier,f
  2261  0207  3EFF               	addlw	-1
  2262  0208  1D03               	skipz
  2263  0209  2A04               	goto	u655
  2264  020A                     l1344:	
  2265  020A  0870               	movf	___wmul@multiplier,w
  2266  020B  0471               	iorwf	___wmul@multiplier+1,w
  2267  020C  1D03               	btfss	3,2
  2268  020D  2A0F               	goto	u661
  2269  020E  2A10               	goto	u660
  2270  020F                     u661:	
  2271  020F  29F2               	goto	l1338
  2272  0210                     u660:	
  2273  0210                     l1346:	
  2274  0210  0875               	movf	___wmul@product+1,w
  2275  0211  00F1               	movwf	?___wmul+1
  2276  0212  0874               	movf	___wmul@product,w
  2277  0213  00F0               	movwf	?___wmul
  2278  0214                     l313:	
  2279  0214  0008               	return
  2280  0215                     __end_of___wmul:	
  2281                           
  2282                           	psect	text5
  2283  02CB                     __ptext5:	
  2284 ;; *************** function ___lwmod *****************
  2285 ;; Defined at:
  2286 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  divisor         2    8[COMMON] unsigned int 
  2289 ;;  dividend        2   10[COMMON] unsigned int 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  counter         1   13[COMMON] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  2    8[COMMON] unsigned int 
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2301 ;;      Params:         4       0       0       0       0
  2302 ;;      Locals:         1       0       0       0       0
  2303 ;;      Temps:          1       0       0       0       0
  2304 ;;      Totals:         6       0       0       0       0
  2305 ;;Total ram usage:        6 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_sprintf
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           
  2315                           ;psect for function ___lwmod
  2316  02CB                     ___lwmod:	
  2317  02CB                     l1414:	
  2318                           ;incstack = 0
  2319                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2320                           
  2321  02CB  0878               	movf	___lwmod@divisor,w
  2322  02CC  0479               	iorwf	___lwmod@divisor+1,w
  2323  02CD  1903               	btfsc	3,2
  2324  02CE  2AD0               	goto	u831
  2325  02CF  2AD1               	goto	u830
  2326  02D0                     u831:	
  2327  02D0  2B00               	goto	l1432
  2328  02D1                     u830:	
  2329  02D1                     l1416:	
  2330  02D1  01FD               	clrf	___lwmod@counter
  2331  02D2  0AFD               	incf	___lwmod@counter,f
  2332  02D3  2ADF               	goto	l1422
  2333  02D4                     l1418:	
  2334  02D4  3001               	movlw	1
  2335  02D5                     u845:	
  2336  02D5  1003               	clrc
  2337  02D6  0DF8               	rlf	___lwmod@divisor,f
  2338  02D7  0DF9               	rlf	___lwmod@divisor+1,f
  2339  02D8  3EFF               	addlw	-1
  2340  02D9  1D03               	skipz
  2341  02DA  2AD5               	goto	u845
  2342  02DB                     l1420:	
  2343  02DB  3001               	movlw	1
  2344  02DC  00FC               	movwf	??___lwmod
  2345  02DD  087C               	movf	??___lwmod,w
  2346  02DE  07FD               	addwf	___lwmod@counter,f
  2347  02DF                     l1422:	
  2348  02DF  1FF9               	btfss	___lwmod@divisor+1,7
  2349  02E0  2AE2               	goto	u851
  2350  02E1  2AE3               	goto	u850
  2351  02E2                     u851:	
  2352  02E2  2AD4               	goto	l1418
  2353  02E3                     u850:	
  2354  02E3                     l1424:	
  2355  02E3  0879               	movf	___lwmod@divisor+1,w
  2356  02E4  027B               	subwf	___lwmod@dividend+1,w
  2357  02E5  1D03               	skipz
  2358  02E6  2AE9               	goto	u865
  2359  02E7  0878               	movf	___lwmod@divisor,w
  2360  02E8  027A               	subwf	___lwmod@dividend,w
  2361  02E9                     u865:	
  2362  02E9  1C03               	skipc
  2363  02EA  2AEC               	goto	u861
  2364  02EB  2AED               	goto	u860
  2365  02EC                     u861:	
  2366  02EC  2AF3               	goto	l1428
  2367  02ED                     u860:	
  2368  02ED                     l1426:	
  2369  02ED  0878               	movf	___lwmod@divisor,w
  2370  02EE  02FA               	subwf	___lwmod@dividend,f
  2371  02EF  0879               	movf	___lwmod@divisor+1,w
  2372  02F0  1C03               	skipc
  2373  02F1  03FB               	decf	___lwmod@dividend+1,f
  2374  02F2  02FB               	subwf	___lwmod@dividend+1,f
  2375  02F3                     l1428:	
  2376  02F3  3001               	movlw	1
  2377  02F4                     u875:	
  2378  02F4  1003               	clrc
  2379  02F5  0CF9               	rrf	___lwmod@divisor+1,f
  2380  02F6  0CF8               	rrf	___lwmod@divisor,f
  2381  02F7  3EFF               	addlw	-1
  2382  02F8  1D03               	skipz
  2383  02F9  2AF4               	goto	u875
  2384  02FA                     l1430:	
  2385  02FA  3001               	movlw	1
  2386  02FB  02FD               	subwf	___lwmod@counter,f
  2387  02FC  1D03               	btfss	3,2
  2388  02FD  2AFF               	goto	u881
  2389  02FE  2B00               	goto	u880
  2390  02FF                     u881:	
  2391  02FF  2AE3               	goto	l1424
  2392  0300                     u880:	
  2393  0300                     l1432:	
  2394  0300  087B               	movf	___lwmod@dividend+1,w
  2395  0301  00F9               	movwf	?___lwmod+1
  2396  0302  087A               	movf	___lwmod@dividend,w
  2397  0303  00F8               	movwf	?___lwmod
  2398  0304                     l593:	
  2399  0304  0008               	return
  2400  0305                     __end_of___lwmod:	
  2401                           
  2402                           	psect	text6
  2403  0347                     __ptext6:	
  2404 ;; *************** function ___lwdiv *****************
  2405 ;; Defined at:
  2406 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  divisor         2    0[COMMON] unsigned int 
  2409 ;;  dividend        2    2[COMMON] unsigned int 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  quotient        2    5[COMMON] unsigned int 
  2412 ;;  counter         1    7[COMMON] unsigned char 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  2    0[COMMON] unsigned int 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2422 ;;      Params:         4       0       0       0       0
  2423 ;;      Locals:         3       0       0       0       0
  2424 ;;      Temps:          1       0       0       0       0
  2425 ;;      Totals:         8       0       0       0       0
  2426 ;;Total ram usage:        8 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_sprintf
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           
  2436                           ;psect for function ___lwdiv
  2437  0347                     ___lwdiv:	
  2438  0347                     l1388:	
  2439                           ;incstack = 0
  2440                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2441                           
  2442  0347  01F5               	clrf	___lwdiv@quotient
  2443  0348  01F6               	clrf	___lwdiv@quotient+1
  2444  0349                     l1390:	
  2445  0349  0870               	movf	___lwdiv@divisor,w
  2446  034A  0471               	iorwf	___lwdiv@divisor+1,w
  2447  034B  1903               	btfsc	3,2
  2448  034C  2B4E               	goto	u761
  2449  034D  2B4F               	goto	u760
  2450  034E                     u761:	
  2451  034E  2B86               	goto	l1410
  2452  034F                     u760:	
  2453  034F                     l1392:	
  2454  034F  01F7               	clrf	___lwdiv@counter
  2455  0350  0AF7               	incf	___lwdiv@counter,f
  2456  0351  2B5D               	goto	l1398
  2457  0352                     l1394:	
  2458  0352  3001               	movlw	1
  2459  0353                     u775:	
  2460  0353  1003               	clrc
  2461  0354  0DF0               	rlf	___lwdiv@divisor,f
  2462  0355  0DF1               	rlf	___lwdiv@divisor+1,f
  2463  0356  3EFF               	addlw	-1
  2464  0357  1D03               	skipz
  2465  0358  2B53               	goto	u775
  2466  0359                     l1396:	
  2467  0359  3001               	movlw	1
  2468  035A  00F4               	movwf	??___lwdiv
  2469  035B  0874               	movf	??___lwdiv,w
  2470  035C  07F7               	addwf	___lwdiv@counter,f
  2471  035D                     l1398:	
  2472  035D  1FF1               	btfss	___lwdiv@divisor+1,7
  2473  035E  2B60               	goto	u781
  2474  035F  2B61               	goto	u780
  2475  0360                     u781:	
  2476  0360  2B52               	goto	l1394
  2477  0361                     u780:	
  2478  0361                     l1400:	
  2479  0361  3001               	movlw	1
  2480  0362                     u795:	
  2481  0362  1003               	clrc
  2482  0363  0DF5               	rlf	___lwdiv@quotient,f
  2483  0364  0DF6               	rlf	___lwdiv@quotient+1,f
  2484  0365  3EFF               	addlw	-1
  2485  0366  1D03               	skipz
  2486  0367  2B62               	goto	u795
  2487  0368  0871               	movf	___lwdiv@divisor+1,w
  2488  0369  0273               	subwf	___lwdiv@dividend+1,w
  2489  036A  1D03               	skipz
  2490  036B  2B6E               	goto	u805
  2491  036C  0870               	movf	___lwdiv@divisor,w
  2492  036D  0272               	subwf	___lwdiv@dividend,w
  2493  036E                     u805:	
  2494  036E  1C03               	skipc
  2495  036F  2B71               	goto	u801
  2496  0370  2B72               	goto	u800
  2497  0371                     u801:	
  2498  0371  2B79               	goto	l1406
  2499  0372                     u800:	
  2500  0372                     l1402:	
  2501  0372  0870               	movf	___lwdiv@divisor,w
  2502  0373  02F2               	subwf	___lwdiv@dividend,f
  2503  0374  0871               	movf	___lwdiv@divisor+1,w
  2504  0375  1C03               	skipc
  2505  0376  03F3               	decf	___lwdiv@dividend+1,f
  2506  0377  02F3               	subwf	___lwdiv@dividend+1,f
  2507  0378                     l1404:	
  2508  0378  1475               	bsf	___lwdiv@quotient,0
  2509  0379                     l1406:	
  2510  0379  3001               	movlw	1
  2511  037A                     u815:	
  2512  037A  1003               	clrc
  2513  037B  0CF1               	rrf	___lwdiv@divisor+1,f
  2514  037C  0CF0               	rrf	___lwdiv@divisor,f
  2515  037D  3EFF               	addlw	-1
  2516  037E  1D03               	skipz
  2517  037F  2B7A               	goto	u815
  2518  0380                     l1408:	
  2519  0380  3001               	movlw	1
  2520  0381  02F7               	subwf	___lwdiv@counter,f
  2521  0382  1D03               	btfss	3,2
  2522  0383  2B85               	goto	u821
  2523  0384  2B86               	goto	u820
  2524  0385                     u821:	
  2525  0385  2B61               	goto	l1400
  2526  0386                     u820:	
  2527  0386                     l1410:	
  2528  0386  0876               	movf	___lwdiv@quotient+1,w
  2529  0387  00F1               	movwf	?___lwdiv+1
  2530  0388  0875               	movf	___lwdiv@quotient,w
  2531  0389  00F0               	movwf	?___lwdiv
  2532  038A                     l583:	
  2533  038A  0008               	return
  2534  038B                     __end_of___lwdiv:	
  2535                           
  2536                           	psect	text7
  2537  01C0                     __ptext7:	
  2538 ;; *************** function ___bmul *****************
  2539 ;; Defined at:
  2540 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  multiplier      1    wreg     unsigned char 
  2543 ;;  multiplicand    1    0[COMMON] unsigned char 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  multiplier      1    3[COMMON] unsigned char 
  2546 ;;  product         1    2[COMMON] unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      unsigned char 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2556 ;;      Params:         1       0       0       0       0
  2557 ;;      Locals:         2       0       0       0       0
  2558 ;;      Temps:          1       0       0       0       0
  2559 ;;      Totals:         4       0       0       0       0
  2560 ;;Total ram usage:        4 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_sprintf
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function ___bmul
  2571  01C0                     ___bmul:	
  2572                           
  2573                           ;incstack = 0
  2574                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2575                           ;___bmul@multiplier stored from wreg
  2576  01C0  00F3               	movwf	___bmul@multiplier
  2577  01C1                     l1350:	
  2578  01C1  01F2               	clrf	___bmul@product
  2579  01C2                     l1352:	
  2580  01C2  1C73               	btfss	___bmul@multiplier,0
  2581  01C3  29C5               	goto	u671
  2582  01C4  29C6               	goto	u670
  2583  01C5                     u671:	
  2584  01C5  29CA               	goto	l1356
  2585  01C6                     u670:	
  2586  01C6                     l1354:	
  2587  01C6  0870               	movf	___bmul@multiplicand,w
  2588  01C7  00F1               	movwf	??___bmul
  2589  01C8  0871               	movf	??___bmul,w
  2590  01C9  07F2               	addwf	___bmul@product,f
  2591  01CA                     l1356:	
  2592  01CA  1003               	clrc
  2593  01CB  0DF0               	rlf	___bmul@multiplicand,f
  2594  01CC                     l1358:	
  2595  01CC  1003               	clrc
  2596  01CD  0CF3               	rrf	___bmul@multiplier,f
  2597  01CE  0873               	movf	___bmul@multiplier,w
  2598  01CF  1D03               	btfss	3,2
  2599  01D0  29D2               	goto	u681
  2600  01D1  29D3               	goto	u680
  2601  01D2                     u681:	
  2602  01D2  29C2               	goto	l1352
  2603  01D3                     u680:	
  2604  01D3                     l1360:	
  2605  01D3  0872               	movf	___bmul@product,w
  2606  01D4                     l337:	
  2607  01D4  0008               	return
  2608  01D5                     __end_of___bmul:	
  2609                           
  2610                           	psect	text8
  2611  023C                     __ptext8:	
  2612 ;; *************** function _setLCD *****************
  2613 ;; Defined at:
  2614 ;;		line 68 in file "LCD.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  V               2    4[COMMON] int 
  2617 ;;  M               2    6[COMMON] int 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  Z               2    8[COMMON] int 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, pclath, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2629 ;;      Params:         4       0       0       0       0
  2630 ;;      Locals:         2       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0
  2632 ;;      Totals:         6       0       0       0       0
  2633 ;;Total ram usage:        6 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    1
  2636 ;; This function calls:
  2637 ;;		_enviardatos
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           
  2644                           ;psect for function _setLCD
  2645  023C                     _setLCD:	
  2646  023C                     l1464:	
  2647                           ;incstack = 0
  2648                           ; Regs used in _setLCD: [wreg+status,2+status,0+pclath+cstack]
  2649                           
  2650                           
  2651                           ;LCD.c: 69:     int Z;;LCD.c: 70:     if(V == 1) {
  2652  023C  0374               	decf	setLCD@V,w
  2653  023D  0475               	iorwf	setLCD@V+1,w
  2654  023E  1D03               	btfss	3,2
  2655  023F  2A41               	goto	u891
  2656  0240  2A42               	goto	u890
  2657  0241                     u891:	
  2658  0241  2A54               	goto	l1470
  2659  0242                     u890:	
  2660  0242                     l1466:	
  2661                           
  2662                           ;LCD.c: 71:         Z = 0x80 + M - 1;
  2663  0242  0876               	movf	setLCD@M,w
  2664  0243  3E7F               	addlw	127
  2665  0244  00F8               	movwf	setLCD@Z
  2666  0245  0877               	movf	setLCD@M+1,w
  2667  0246  1803               	skipnc
  2668  0247  3E01               	addlw	1
  2669  0248  3E00               	addlw	0
  2670  0249  00F9               	movwf	setLCD@Z+1
  2671  024A                     l1468:	
  2672                           
  2673                           ;LCD.c: 72:                 enviardatos(Z);
  2674  024A  0879               	movf	setLCD@Z+1,w
  2675  024B  00F1               	movwf	enviardatos@crack+1
  2676  024C  0878               	movf	setLCD@Z,w
  2677  024D  00F0               	movwf	enviardatos@crack
  2678  024E  120A  118A  2215  120A  118A  	fcall	_enviardatos
  2679                           
  2680                           ;LCD.c: 73:     }
  2681  0253  2A64               	goto	l29
  2682  0254                     l1470:	
  2683  0254  3002               	movlw	2
  2684  0255  0674               	xorwf	setLCD@V,w
  2685  0256  0475               	iorwf	setLCD@V+1,w
  2686  0257  1D03               	btfss	3,2
  2687  0258  2A5A               	goto	u901
  2688  0259  2A5B               	goto	u900
  2689  025A                     u901:	
  2690  025A  2A64               	goto	l29
  2691  025B                     u900:	
  2692  025B                     l1472:	
  2693                           
  2694                           ;LCD.c: 75:         Z = 0xC0 + M - 1;
  2695  025B  0876               	movf	setLCD@M,w
  2696  025C  3EBF               	addlw	191
  2697  025D  00F8               	movwf	setLCD@Z
  2698  025E  0877               	movf	setLCD@M+1,w
  2699  025F  1803               	skipnc
  2700  0260  3E01               	addlw	1
  2701  0261  3E00               	addlw	0
  2702  0262  00F9               	movwf	setLCD@Z+1
  2703  0263  2A4A               	goto	l1468
  2704  0264                     l29:	
  2705  0264  0008               	return
  2706  0265                     __end_of_setLCD:	
  2707                           
  2708                           	psect	text9
  2709  01D5                     __ptext9:	
  2710 ;; *************** function _limpiarLCD *****************
  2711 ;; Defined at:
  2712 ;;		line 62 in file "LCD.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0, pclath, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2726 ;;      Params:         0       0       0       0       0
  2727 ;;      Locals:         0       0       0       0       0
  2728 ;;      Temps:          2       0       0       0       0
  2729 ;;      Totals:         2       0       0       0       0
  2730 ;;Total ram usage:        2 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:    1
  2733 ;; This function calls:
  2734 ;;		_enviardatos
  2735 ;; This function is called by:
  2736 ;;		_main
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           
  2741                           ;psect for function _limpiarLCD
  2742  01D5                     _limpiarLCD:	
  2743  01D5                     l1460:	
  2744                           ;incstack = 0
  2745                           ; Regs used in _limpiarLCD: [wreg+status,2+status,0+pclath+cstack]
  2746                           
  2747                           
  2748                           ;LCD.c: 63:     enviardatos(0x00);
  2749  01D5  3000               	movlw	0
  2750  01D6  00F0               	movwf	enviardatos@crack
  2751  01D7  00F1               	movwf	enviardatos@crack+1
  2752  01D8  120A  118A  2215  120A  118A  	fcall	_enviardatos
  2753                           
  2754                           ;LCD.c: 64:     enviardatos(0x01);
  2755  01DD  3001               	movlw	1
  2756  01DE  00F0               	movwf	enviardatos@crack
  2757  01DF  3000               	movlw	0
  2758  01E0  00F1               	movwf	enviardatos@crack+1
  2759  01E1  120A  118A  2215  120A  118A  	fcall	_enviardatos
  2760  01E6                     l1462:	
  2761                           
  2762                           ;LCD.c: 65:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2763  01E6  300D               	movlw	13
  2764  01E7  00F5               	movwf	??_limpiarLCD+1
  2765  01E8  30FB               	movlw	251
  2766  01E9  00F4               	movwf	??_limpiarLCD
  2767  01EA                     u1297:	
  2768  01EA  0BF4               	decfsz	??_limpiarLCD,f
  2769  01EB  29EA               	goto	u1297
  2770  01EC  0BF5               	decfsz	??_limpiarLCD+1,f
  2771  01ED  29EA               	goto	u1297
  2772  01EE  29EF               	nop2
  2773  01EF                     l23:	
  2774  01EF  0008               	return
  2775  01F0                     __end_of_limpiarLCD:	
  2776                           
  2777                           	psect	text10
  2778  0215                     __ptext10:	
  2779 ;; *************** function _enviardatos *****************
  2780 ;; Defined at:
  2781 ;;		line 52 in file "LCD.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  crack           2    0[COMMON] int 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2795 ;;      Params:         2       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0
  2797 ;;      Temps:          2       0       0       0       0
  2798 ;;      Totals:         4       0       0       0       0
  2799 ;;Total ram usage:        4 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_startLCD
  2805 ;;		_limpiarLCD
  2806 ;;		_setLCD
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           
  2811                           ;psect for function _enviardatos
  2812  0215                     _enviardatos:	
  2813  0215                     l1304:	
  2814                           ;incstack = 0
  2815                           ; Regs used in _enviardatos: [wreg]
  2816                           
  2817                           
  2818                           ;LCD.c: 53:     PORTDbits.RD6 = 0;
  2819  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2820  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2821  0217  1308               	bcf	8,6	;volatile
  2822  0218                     l1306:	
  2823                           
  2824                           ;LCD.c: 54:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2825  0218  300D               	movlw	13
  2826  0219  00F3               	movwf	??_enviardatos+1
  2827  021A  30FB               	movlw	251
  2828  021B  00F2               	movwf	??_enviardatos
  2829  021C                     u1307:	
  2830  021C  0BF2               	decfsz	??_enviardatos,f
  2831  021D  2A1C               	goto	u1307
  2832  021E  0BF3               	decfsz	??_enviardatos+1,f
  2833  021F  2A1C               	goto	u1307
  2834  0220  2A21               	nop2
  2835  0221                     l1308:	
  2836                           
  2837                           ;LCD.c: 55:     PORTDbits.RD7 = 1;
  2838  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2839  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2840  0223  1788               	bsf	8,7	;volatile
  2841                           
  2842                           ;LCD.c: 56:     PORTB = crack;
  2843  0224  0870               	movf	enviardatos@crack,w
  2844  0225  0086               	movwf	6	;volatile
  2845                           
  2846                           ;LCD.c: 57:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2847  0226  300D               	movlw	13
  2848  0227  00F3               	movwf	??_enviardatos+1
  2849  0228  30FB               	movlw	251
  2850  0229  00F2               	movwf	??_enviardatos
  2851  022A                     u1317:	
  2852  022A  0BF2               	decfsz	??_enviardatos,f
  2853  022B  2A2A               	goto	u1317
  2854  022C  0BF3               	decfsz	??_enviardatos+1,f
  2855  022D  2A2A               	goto	u1317
  2856  022E  2A2F               	nop2
  2857  022F                     l1310:	
  2858                           
  2859                           ;LCD.c: 58:     PORTDbits.RD7 = 0;
  2860  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2861  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2862  0231  1388               	bcf	8,7	;volatile
  2863                           
  2864                           ;LCD.c: 59:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2865  0232  300D               	movlw	13
  2866  0233  00F3               	movwf	??_enviardatos+1
  2867  0234  30FB               	movlw	251
  2868  0235  00F2               	movwf	??_enviardatos
  2869  0236                     u1327:	
  2870  0236  0BF2               	decfsz	??_enviardatos,f
  2871  0237  2A36               	goto	u1327
  2872  0238  0BF3               	decfsz	??_enviardatos+1,f
  2873  0239  2A36               	goto	u1327
  2874  023A  2A3B               	nop2
  2875  023B                     l20:	
  2876  023B  0008               	return
  2877  023C                     __end_of_enviardatos:	
  2878                           
  2879                           	psect	text11
  2880  0305                     __ptext11:	
  2881 ;; *************** function _escribirLCD *****************
  2882 ;; Defined at:
  2883 ;;		line 88 in file "LCD.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  V               2    2[COMMON] PTR unsigned char 
  2886 ;;		 -> main@savechain(16), STR_1(17), 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  X               2    7[COMMON] int 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2898 ;;      Params:         2       0       0       0       0
  2899 ;;      Locals:         2       0       0       0       0
  2900 ;;      Temps:          3       0       0       0       0
  2901 ;;      Totals:         7       0       0       0       0
  2902 ;;Total ram usage:        7 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; Hardware stack levels required when called:    1
  2905 ;; This function calls:
  2906 ;;		_charLCD
  2907 ;; This function is called by:
  2908 ;;		_main
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           
  2913                           ;psect for function _escribirLCD
  2914  0305                     _escribirLCD:	
  2915  0305                     l1476:	
  2916                           ;incstack = 0
  2917                           ; Regs used in _escribirLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2918                           
  2919                           
  2920                           ;LCD.c: 89:     int X;;LCD.c: 90:     for(X = 0; V[X] != '\0'; X++) {
  2921  0305  01F7               	clrf	escribirLCD@X
  2922  0306  01F8               	clrf	escribirLCD@X+1
  2923  0307  2B2A               	goto	l1482
  2924  0308                     l1478:	
  2925                           
  2926                           ;LCD.c: 91:         charLCD(V[X]);
  2927  0308  0877               	movf	escribirLCD@X,w
  2928  0309  0772               	addwf	escribirLCD@V,w
  2929  030A  00F5               	movwf	??_escribirLCD+1
  2930  030B  0873               	movf	escribirLCD@V+1,w
  2931  030C  00F4               	movwf	??_escribirLCD
  2932  030D  1803               	skipnc
  2933  030E  0AF4               	incf	??_escribirLCD,f
  2934  030F  1FF7               	btfss	escribirLCD@X,7
  2935  0310  2B12               	goto	u910
  2936  0311  03F4               	decf	??_escribirLCD,f
  2937  0312                     u910:	
  2938  0312  0874               	movf	??_escribirLCD,w
  2939  0313  00F6               	movwf	??_escribirLCD+2
  2940  0314  0876               	movf	??_escribirLCD+2,w
  2941  0315  1283               	bcf	3,5	;RP0=0, select bank0
  2942  0316  1303               	bcf	3,6	;RP1=0, select bank0
  2943  0317  00FF               	movwf	btemp+1
  2944  0318  0875               	movf	??_escribirLCD+1,w
  2945  0319  0084               	movwf	4
  2946  031A  120A  118A  2003  120A  118A  	fcall	stringtab
  2947  031F  120A  118A  219E  120A  118A  	fcall	_charLCD
  2948  0324                     l1480:	
  2949                           
  2950                           ;LCD.c: 92:     }
  2951  0324  3001               	movlw	1
  2952  0325  07F7               	addwf	escribirLCD@X,f
  2953  0326  1803               	skipnc
  2954  0327  0AF8               	incf	escribirLCD@X+1,f
  2955  0328  3000               	movlw	0
  2956  0329  07F8               	addwf	escribirLCD@X+1,f
  2957  032A                     l1482:	
  2958  032A  0877               	movf	escribirLCD@X,w
  2959  032B  0772               	addwf	escribirLCD@V,w
  2960  032C  00F5               	movwf	??_escribirLCD+1
  2961  032D  0873               	movf	escribirLCD@V+1,w
  2962  032E  00F4               	movwf	??_escribirLCD
  2963  032F  1803               	skipnc
  2964  0330  0AF4               	incf	??_escribirLCD,f
  2965  0331  1FF7               	btfss	escribirLCD@X,7
  2966  0332  2B34               	goto	u920
  2967  0333  03F4               	decf	??_escribirLCD,f
  2968  0334                     u920:	
  2969  0334  0874               	movf	??_escribirLCD,w
  2970  0335  00F6               	movwf	??_escribirLCD+2
  2971  0336  0876               	movf	??_escribirLCD+2,w
  2972  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2974  0339  00FF               	movwf	btemp+1
  2975  033A  0875               	movf	??_escribirLCD+1,w
  2976  033B  0084               	movwf	4
  2977  033C  120A  118A  2003  120A  118A  	fcall	stringtab
  2978  0341  3A00               	xorlw	0
  2979  0342  1D03               	skipz
  2980  0343  2B45               	goto	u931
  2981  0344  2B46               	goto	u930
  2982  0345                     u931:	
  2983  0345  2B08               	goto	l1478
  2984  0346                     u930:	
  2985  0346                     l38:	
  2986  0346  0008               	return
  2987  0347                     __end_of_escribirLCD:	
  2988                           
  2989                           	psect	text12
  2990  019E                     __ptext12:	
  2991 ;; *************** function _charLCD *****************
  2992 ;; Defined at:
  2993 ;;		line 80 in file "LCD.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  V               1    wreg     unsigned char 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  V               1    1[COMMON] unsigned char 
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      void 
  3000 ;; Registers used:
  3001 ;;		wreg
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3007 ;;      Params:         0       0       0       0       0
  3008 ;;      Locals:         1       0       0       0       0
  3009 ;;      Temps:          1       0       0       0       0
  3010 ;;      Totals:         2       0       0       0       0
  3011 ;;Total ram usage:        2 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; This function calls:
  3014 ;;		Nothing
  3015 ;; This function is called by:
  3016 ;;		_escribirLCD
  3017 ;;		_main
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           
  3022                           ;psect for function _charLCD
  3023  019E                     _charLCD:	
  3024                           
  3025                           ;incstack = 0
  3026                           ; Regs used in _charLCD: [wreg]
  3027                           ;charLCD@V stored from wreg
  3028  019E  00F1               	movwf	charLCD@V
  3029  019F                     l1312:	
  3030                           
  3031                           ;LCD.c: 81:    PORTDbits.RD6 = 1;
  3032  019F  1283               	bcf	3,5	;RP0=0, select bank0
  3033  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  3034  01A1  1708               	bsf	8,6	;volatile
  3035  01A2                     l1314:	
  3036                           
  3037                           ;LCD.c: 82:    PORTB = V;
  3038  01A2  0871               	movf	charLCD@V,w
  3039  01A3  0086               	movwf	6	;volatile
  3040  01A4                     l1316:	
  3041                           
  3042                           ;LCD.c: 83:    PORTDbits.RD7 = 1;
  3043  01A4  1788               	bsf	8,7	;volatile
  3044                           
  3045                           ;LCD.c: 84:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3046  01A5  301A               	movlw	26
  3047  01A6  00F0               	movwf	??_charLCD
  3048  01A7                     u1337:	
  3049  01A7  0BF0               	decfsz	??_charLCD,f
  3050  01A8  29A7               	goto	u1337
  3051  01A9  0000               	nop
  3052  01AA                     l1318:	
  3053                           
  3054                           ;LCD.c: 85:    PORTDbits.RD7 = 0;
  3055  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  3056  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  3057  01AC  1388               	bcf	8,7	;volatile
  3058  01AD                     l32:	
  3059  01AD  0008               	return
  3060  01AE                     __end_of_charLCD:	
  3061                           
  3062                           	psect	text13
  3063  0187                     __ptext13:	
  3064 ;; *************** function _I2C_Master_Write *****************
  3065 ;; Defined at:
  3066 ;;		line 66 in file "I2C.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  d               2    0[COMMON] unsigned int 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0, pclath, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3080 ;;      Params:         2       0       0       0       0
  3081 ;;      Locals:         0       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0
  3083 ;;      Totals:         2       0       0       0       0
  3084 ;;Total ram usage:        2 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    1
  3087 ;; This function calls:
  3088 ;;		_I2C_Master_Wait
  3089 ;; This function is called by:
  3090 ;;		_main
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           
  3095                           ;psect for function _I2C_Master_Write
  3096  0187                     _I2C_Master_Write:	
  3097  0187                     l1500:	
  3098                           ;incstack = 0
  3099                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3100                           
  3101                           
  3102                           ;I2C.c: 66: void I2C_Master_Write(unsigned d);I2C.c: 67: {;I2C.c: 68:     I2C_Master_Wai
      +                          t();
  3103  0187  120A  118A  2191  120A  118A  	fcall	_I2C_Master_Wait
  3104  018C                     l1502:	
  3105                           
  3106                           ;I2C.c: 69:     SSPBUF = d;
  3107  018C  0870               	movf	I2C_Master_Write@d,w
  3108  018D  1283               	bcf	3,5	;RP0=0, select bank0
  3109  018E  1303               	bcf	3,6	;RP1=0, select bank0
  3110  018F  0093               	movwf	19	;volatile
  3111  0190                     l166:	
  3112  0190  0008               	return
  3113  0191                     __end_of_I2C_Master_Write:	
  3114                           
  3115                           	psect	text14
  3116  017E                     __ptext14:	
  3117 ;; *************** function _I2C_Master_Stop *****************
  3118 ;; Defined at:
  3119 ;;		line 56 in file "I2C.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2, status,0, pclath, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3133 ;;      Params:         0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0
  3136 ;;      Totals:         0       0       0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    1
  3140 ;; This function calls:
  3141 ;;		_I2C_Master_Wait
  3142 ;; This function is called by:
  3143 ;;		_main
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           
  3148                           ;psect for function _I2C_Master_Stop
  3149  017E                     _I2C_Master_Stop:	
  3150  017E                     l1520:	
  3151                           ;incstack = 0
  3152                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3153                           
  3154                           
  3155                           ;I2C.c: 58:     I2C_Master_Wait();
  3156  017E  120A  118A  2191  120A  118A  	fcall	_I2C_Master_Wait
  3157  0183                     l1522:	
  3158                           
  3159                           ;I2C.c: 59:     SSPCON2bits.PEN = 1;
  3160  0183  1683               	bsf	3,5	;RP0=1, select bank1
  3161  0184  1303               	bcf	3,6	;RP1=0, select bank1
  3162  0185  1511               	bsf	17,2	;volatile
  3163  0186                     l163:	
  3164  0186  0008               	return
  3165  0187                     __end_of_I2C_Master_Stop:	
  3166                           
  3167                           	psect	text15
  3168  0175                     __ptext15:	
  3169 ;; *************** function _I2C_Master_Start *****************
  3170 ;; Defined at:
  3171 ;;		line 40 in file "I2C.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0, pclath, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3185 ;;      Params:         0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0
  3188 ;;      Totals:         0       0       0       0       0
  3189 ;;Total ram usage:        0 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    1
  3192 ;; This function calls:
  3193 ;;		_I2C_Master_Wait
  3194 ;; This function is called by:
  3195 ;;		_main
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           
  3200                           ;psect for function _I2C_Master_Start
  3201  0175                     _I2C_Master_Start:	
  3202  0175                     l1496:	
  3203                           ;incstack = 0
  3204                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3205                           
  3206                           
  3207                           ;I2C.c: 42:     I2C_Master_Wait();
  3208  0175  120A  118A  2191  120A  118A  	fcall	_I2C_Master_Wait
  3209  017A                     l1498:	
  3210                           
  3211                           ;I2C.c: 43:     SSPCON2bits.SEN = 1;
  3212  017A  1683               	bsf	3,5	;RP0=1, select bank1
  3213  017B  1303               	bcf	3,6	;RP1=0, select bank1
  3214  017C  1411               	bsf	17,0	;volatile
  3215  017D                     l157:	
  3216  017D  0008               	return
  3217  017E                     __end_of_I2C_Master_Start:	
  3218                           
  3219                           	psect	text16
  3220  0265                     __ptext16:	
  3221 ;; *************** function _I2C_Master_Read *****************
  3222 ;; Defined at:
  3223 ;;		line 75 in file "I2C.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  a               2    0[COMMON] unsigned short 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  temp            2    4[COMMON] unsigned short 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  2    0[COMMON] unsigned short 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0, pclath, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3237 ;;      Params:         2       0       0       0       0
  3238 ;;      Locals:         2       0       0       0       0
  3239 ;;      Temps:          2       0       0       0       0
  3240 ;;      Totals:         6       0       0       0       0
  3241 ;;Total ram usage:        6 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    1
  3244 ;; This function calls:
  3245 ;;		_I2C_Master_Wait
  3246 ;; This function is called by:
  3247 ;;		_main
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function _I2C_Master_Read
  3253  0265                     _I2C_Master_Read:	
  3254  0265                     l1504:	
  3255                           ;incstack = 0
  3256                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3257                           
  3258                           
  3259                           ;I2C.c: 75: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 76: {;I2C.c: 77:    
      +                           unsigned short temp;;I2C.c: 78:     I2C_Master_Wait();
  3260  0265  120A  118A  2191  120A  118A  	fcall	_I2C_Master_Wait
  3261  026A                     l1506:	
  3262                           
  3263                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  3264  026A  1683               	bsf	3,5	;RP0=1, select bank1
  3265  026B  1303               	bcf	3,6	;RP1=0, select bank1
  3266  026C  1591               	bsf	17,3	;volatile
  3267                           
  3268                           ;I2C.c: 80:     I2C_Master_Wait();
  3269  026D  120A  118A  2191  120A  118A  	fcall	_I2C_Master_Wait
  3270  0272                     l1508:	
  3271                           
  3272                           ;I2C.c: 81:     temp = SSPBUF;
  3273  0272  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0273  1303               	bcf	3,6	;RP1=0, select bank0
  3275  0274  0813               	movf	19,w	;volatile
  3276  0275  00F2               	movwf	??_I2C_Master_Read
  3277  0276  01F3               	clrf	??_I2C_Master_Read+1
  3278  0277  0872               	movf	??_I2C_Master_Read,w
  3279  0278  00F4               	movwf	I2C_Master_Read@temp
  3280  0279  0873               	movf	??_I2C_Master_Read+1,w
  3281  027A  00F5               	movwf	I2C_Master_Read@temp+1
  3282  027B                     l1510:	
  3283                           
  3284                           ;I2C.c: 82:     I2C_Master_Wait();
  3285  027B  120A  118A  2191  120A  118A  	fcall	_I2C_Master_Wait
  3286  0280                     l1512:	
  3287                           
  3288                           ;I2C.c: 83:     if(a == 1){
  3289  0280  0370               	decf	I2C_Master_Read@a,w
  3290  0281  0471               	iorwf	I2C_Master_Read@a+1,w
  3291  0282  1D03               	btfss	3,2
  3292  0283  2A85               	goto	u951
  3293  0284  2A86               	goto	u950
  3294  0285                     u951:	
  3295  0285  2A8A               	goto	l169
  3296  0286                     u950:	
  3297  0286                     l1514:	
  3298                           
  3299                           ;I2C.c: 84:         SSPCON2bits.ACKDT = 0;
  3300  0286  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0287  1303               	bcf	3,6	;RP1=0, select bank1
  3302  0288  1291               	bcf	17,5	;volatile
  3303                           
  3304                           ;I2C.c: 85:     }else{
  3305  0289  2A8D               	goto	l170
  3306  028A                     l169:	
  3307                           
  3308                           ;I2C.c: 86:         SSPCON2bits.ACKDT = 1;
  3309  028A  1683               	bsf	3,5	;RP0=1, select bank1
  3310  028B  1303               	bcf	3,6	;RP1=0, select bank1
  3311  028C  1691               	bsf	17,5	;volatile
  3312  028D                     l170:	
  3313                           ;I2C.c: 87:     }
  3314                           
  3315                           
  3316                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  3317  028D  1611               	bsf	17,4	;volatile
  3318  028E                     l1516:	
  3319                           
  3320                           ;I2C.c: 89:     return temp;
  3321  028E  0875               	movf	I2C_Master_Read@temp+1,w
  3322  028F  00F1               	movwf	?_I2C_Master_Read+1
  3323  0290  0874               	movf	I2C_Master_Read@temp,w
  3324  0291  00F0               	movwf	?_I2C_Master_Read
  3325  0292                     l171:	
  3326  0292  0008               	return
  3327  0293                     __end_of_I2C_Master_Read:	
  3328                           
  3329                           	psect	text17
  3330  0191                     __ptext17:	
  3331 ;; *************** function _I2C_Master_Wait *****************
  3332 ;; Defined at:
  3333 ;;		line 33 in file "I2C.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3347 ;;      Params:         0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0
  3350 ;;      Totals:         0       0       0       0       0
  3351 ;;Total ram usage:        0 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_I2C_Master_Start
  3357 ;;		_I2C_Master_Stop
  3358 ;;		_I2C_Master_Write
  3359 ;;		_I2C_Master_Read
  3360 ;;		_I2C_Master_RepeatedStart
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           
  3365                           ;psect for function _I2C_Master_Wait
  3366  0191                     _I2C_Master_Wait:	
  3367  0191                     l1320:	
  3368                           ;incstack = 0
  3369                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3370                           
  3371  0191                     l151:	
  3372                           ;I2C.c: 35:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3373                           
  3374  0191  1683               	bsf	3,5	;RP0=1, select bank1
  3375  0192  1303               	bcf	3,6	;RP1=0, select bank1
  3376  0193  1914               	btfsc	20,2	;volatile
  3377  0194  2996               	goto	u591
  3378  0195  2997               	goto	u590
  3379  0196                     u591:	
  3380  0196  2991               	goto	l151
  3381  0197                     u590:	
  3382  0197                     l1322:	
  3383  0197  0811               	movf	17,w	;volatile
  3384  0198  391F               	andlw	31
  3385  0199  1D03               	btfss	3,2
  3386  019A  299C               	goto	u601
  3387  019B  299D               	goto	u600
  3388  019C                     u601:	
  3389  019C  2991               	goto	l151
  3390  019D                     u600:	
  3391  019D                     l154:	
  3392  019D  0008               	return
  3393  019E                     __end_of_I2C_Master_Wait:	
  3394                           
  3395                           	psect	text18
  3396  0293                     __ptext18:	
  3397 ;; *************** function _I2C_Master_Init *****************
  3398 ;; Defined at:
  3399 ;;		line 17 in file "I2C.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  c               4    0[BANK0 ] const unsigned long 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, status,2, status,0, pclath, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         0       4       0       0       0
  3414 ;;      Locals:         0       0       0       0       0
  3415 ;;      Temps:          0       4       0       0       0
  3416 ;;      Totals:         0       8       0       0       0
  3417 ;;Total ram usage:        8 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    1
  3420 ;; This function calls:
  3421 ;;		___lldiv
  3422 ;; This function is called by:
  3423 ;;		_main
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           
  3428                           ;psect for function _I2C_Master_Init
  3429  0293                     _I2C_Master_Init:	
  3430  0293                     l1484:	
  3431                           ;incstack = 0
  3432                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3433                           
  3434                           
  3435                           ;I2C.c: 17: void I2C_Master_Init(const unsigned long c);I2C.c: 18: {;I2C.c: 19:     SSPC
      +                          ON = 0b00101000;
  3436  0293  3028               	movlw	40
  3437  0294  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0295  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0296  0094               	movwf	20	;volatile
  3440  0297                     l1486:	
  3441                           
  3442                           ;I2C.c: 20:     SSPCON2 = 0;
  3443  0297  1683               	bsf	3,5	;RP0=1, select bank1
  3444  0298  1303               	bcf	3,6	;RP1=0, select bank1
  3445  0299  0191               	clrf	17	;volatile
  3446  029A                     l1488:	
  3447                           
  3448                           ;I2C.c: 21:     SSPADD = (8000000/(4*c))-1;
  3449  029A  1283               	bcf	3,5	;RP0=0, select bank0
  3450  029B  1303               	bcf	3,6	;RP1=0, select bank0
  3451  029C  0820               	movf	I2C_Master_Init@c,w
  3452  029D  00A4               	movwf	??_I2C_Master_Init
  3453  029E  0821               	movf	I2C_Master_Init@c+1,w
  3454  029F  00A5               	movwf	??_I2C_Master_Init+1
  3455  02A0  0822               	movf	I2C_Master_Init@c+2,w
  3456  02A1  00A6               	movwf	??_I2C_Master_Init+2
  3457  02A2  0823               	movf	I2C_Master_Init@c+3,w
  3458  02A3  00A7               	movwf	??_I2C_Master_Init+3
  3459  02A4  3002               	movlw	2
  3460  02A5                     u945:	
  3461  02A5  1003               	clrc
  3462  02A6  0DA4               	rlf	??_I2C_Master_Init,f
  3463  02A7  0DA5               	rlf	??_I2C_Master_Init+1,f
  3464  02A8  0DA6               	rlf	??_I2C_Master_Init+2,f
  3465  02A9  0DA7               	rlf	??_I2C_Master_Init+3,f
  3466  02AA                     u940:	
  3467  02AA  3EFF               	addlw	-1
  3468  02AB  1D03               	skipz
  3469  02AC  2AA5               	goto	u945
  3470  02AD  0827               	movf	??_I2C_Master_Init+3,w
  3471  02AE  00F3               	movwf	___lldiv@divisor+3
  3472  02AF  0826               	movf	??_I2C_Master_Init+2,w
  3473  02B0  00F2               	movwf	___lldiv@divisor+2
  3474  02B1  0825               	movf	??_I2C_Master_Init+1,w
  3475  02B2  00F1               	movwf	___lldiv@divisor+1
  3476  02B3  0824               	movf	??_I2C_Master_Init,w
  3477  02B4  00F0               	movwf	___lldiv@divisor
  3478  02B5  3000               	movlw	0
  3479  02B6  00F7               	movwf	___lldiv@dividend+3
  3480  02B7  307A               	movlw	122
  3481  02B8  00F6               	movwf	___lldiv@dividend+2
  3482  02B9  3012               	movlw	18
  3483  02BA  00F5               	movwf	___lldiv@dividend+1
  3484  02BB  3000               	movlw	0
  3485  02BC  00F4               	movwf	___lldiv@dividend
  3486  02BD  120A  118A  238B  120A  118A  	fcall	___lldiv
  3487  02C2  0870               	movf	?___lldiv,w
  3488  02C3  3EFF               	addlw	255
  3489  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  3490  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  3491  02C6  0093               	movwf	19	;volatile
  3492  02C7                     l1490:	
  3493                           
  3494                           ;I2C.c: 22:     SSPSTAT = 0;
  3495  02C7  0194               	clrf	20	;volatile
  3496  02C8                     l1492:	
  3497                           
  3498                           ;I2C.c: 23:     TRISCbits.TRISC3 = 1;
  3499  02C8  1587               	bsf	7,3	;volatile
  3500  02C9                     l1494:	
  3501                           
  3502                           ;I2C.c: 24:     TRISCbits.TRISC4 = 1;
  3503  02C9  1607               	bsf	7,4	;volatile
  3504  02CA                     l148:	
  3505  02CA  0008               	return
  3506  02CB                     __end_of_I2C_Master_Init:	
  3507                           
  3508                           	psect	text19
  3509  038B                     __ptext19:	
  3510 ;; *************** function ___lldiv *****************
  3511 ;; Defined at:
  3512 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  divisor         4    0[COMMON] unsigned long 
  3515 ;;  dividend        4    4[COMMON] unsigned long 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  quotient        4    9[COMMON] unsigned long 
  3518 ;;  counter         1   13[COMMON] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  4    0[COMMON] unsigned long 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3528 ;;      Params:         8       0       0       0       0
  3529 ;;      Locals:         5       0       0       0       0
  3530 ;;      Temps:          1       0       0       0       0
  3531 ;;      Totals:        14       0       0       0       0
  3532 ;;Total ram usage:       14 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_I2C_Master_Init
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           
  3542                           ;psect for function ___lldiv
  3543  038B                     ___lldiv:	
  3544  038B                     l1364:	
  3545                           ;incstack = 0
  3546                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3547                           
  3548  038B  3000               	movlw	0
  3549  038C  00FC               	movwf	___lldiv@quotient+3
  3550  038D  3000               	movlw	0
  3551  038E  00FB               	movwf	___lldiv@quotient+2
  3552  038F  3000               	movlw	0
  3553  0390  00FA               	movwf	___lldiv@quotient+1
  3554  0391  3000               	movlw	0
  3555  0392  00F9               	movwf	___lldiv@quotient
  3556  0393  0873               	movf	___lldiv@divisor+3,w
  3557  0394  0472               	iorwf	___lldiv@divisor+2,w
  3558  0395  0471               	iorwf	___lldiv@divisor+1,w
  3559  0396  0470               	iorwf	___lldiv@divisor,w
  3560  0397  1903               	skipnz
  3561  0398  2B9A               	goto	u691
  3562  0399  2B9B               	goto	u690
  3563  039A                     u691:	
  3564  039A  2BE8               	goto	l1384
  3565  039B                     u690:	
  3566  039B                     l1366:	
  3567  039B  01FD               	clrf	___lldiv@counter
  3568  039C  0AFD               	incf	___lldiv@counter,f
  3569  039D  2BAB               	goto	l1370
  3570  039E                     l1368:	
  3571  039E  3001               	movlw	1
  3572  039F  00F8               	movwf	??___lldiv
  3573  03A0                     u705:	
  3574  03A0  1003               	clrc
  3575  03A1  0DF0               	rlf	___lldiv@divisor,f
  3576  03A2  0DF1               	rlf	___lldiv@divisor+1,f
  3577  03A3  0DF2               	rlf	___lldiv@divisor+2,f
  3578  03A4  0DF3               	rlf	___lldiv@divisor+3,f
  3579  03A5  0BF8               	decfsz	??___lldiv,f
  3580  03A6  2BA0               	goto	u705
  3581  03A7  3001               	movlw	1
  3582  03A8  00F8               	movwf	??___lldiv
  3583  03A9  0878               	movf	??___lldiv,w
  3584  03AA  07FD               	addwf	___lldiv@counter,f
  3585  03AB                     l1370:	
  3586  03AB  1FF3               	btfss	___lldiv@divisor+3,7
  3587  03AC  2BAE               	goto	u711
  3588  03AD  2BAF               	goto	u710
  3589  03AE                     u711:	
  3590  03AE  2B9E               	goto	l1368
  3591  03AF                     u710:	
  3592  03AF                     l1372:	
  3593  03AF  3001               	movlw	1
  3594  03B0  00F8               	movwf	??___lldiv
  3595  03B1                     u725:	
  3596  03B1  1003               	clrc
  3597  03B2  0DF9               	rlf	___lldiv@quotient,f
  3598  03B3  0DFA               	rlf	___lldiv@quotient+1,f
  3599  03B4  0DFB               	rlf	___lldiv@quotient+2,f
  3600  03B5  0DFC               	rlf	___lldiv@quotient+3,f
  3601  03B6  0BF8               	decfsz	??___lldiv,f
  3602  03B7  2BB1               	goto	u725
  3603  03B8                     l1374:	
  3604  03B8  0873               	movf	___lldiv@divisor+3,w
  3605  03B9  0277               	subwf	___lldiv@dividend+3,w
  3606  03BA  1D03               	skipz
  3607  03BB  2BC6               	goto	u735
  3608  03BC  0872               	movf	___lldiv@divisor+2,w
  3609  03BD  0276               	subwf	___lldiv@dividend+2,w
  3610  03BE  1D03               	skipz
  3611  03BF  2BC6               	goto	u735
  3612  03C0  0871               	movf	___lldiv@divisor+1,w
  3613  03C1  0275               	subwf	___lldiv@dividend+1,w
  3614  03C2  1D03               	skipz
  3615  03C3  2BC6               	goto	u735
  3616  03C4  0870               	movf	___lldiv@divisor,w
  3617  03C5  0274               	subwf	___lldiv@dividend,w
  3618  03C6                     u735:	
  3619  03C6  1C03               	skipc
  3620  03C7  2BC9               	goto	u731
  3621  03C8  2BCA               	goto	u730
  3622  03C9                     u731:	
  3623  03C9  2BD9               	goto	l1380
  3624  03CA                     u730:	
  3625  03CA                     l1376:	
  3626  03CA  0870               	movf	___lldiv@divisor,w
  3627  03CB  02F4               	subwf	___lldiv@dividend,f
  3628  03CC  0871               	movf	___lldiv@divisor+1,w
  3629  03CD  1C03               	skipc
  3630  03CE  0F71               	incfsz	___lldiv@divisor+1,w
  3631  03CF  02F5               	subwf	___lldiv@dividend+1,f
  3632  03D0  0872               	movf	___lldiv@divisor+2,w
  3633  03D1  1C03               	skipc
  3634  03D2  0F72               	incfsz	___lldiv@divisor+2,w
  3635  03D3  02F6               	subwf	___lldiv@dividend+2,f
  3636  03D4  0873               	movf	___lldiv@divisor+3,w
  3637  03D5  1C03               	skipc
  3638  03D6  0F73               	incfsz	___lldiv@divisor+3,w
  3639  03D7  02F7               	subwf	___lldiv@dividend+3,f
  3640  03D8                     l1378:	
  3641  03D8  1479               	bsf	___lldiv@quotient,0
  3642  03D9                     l1380:	
  3643  03D9  3001               	movlw	1
  3644  03DA                     u745:	
  3645  03DA  1003               	clrc
  3646  03DB  0CF3               	rrf	___lldiv@divisor+3,f
  3647  03DC  0CF2               	rrf	___lldiv@divisor+2,f
  3648  03DD  0CF1               	rrf	___lldiv@divisor+1,f
  3649  03DE  0CF0               	rrf	___lldiv@divisor,f
  3650  03DF  3EFF               	addlw	-1
  3651  03E0  1D03               	skipz
  3652  03E1  2BDA               	goto	u745
  3653  03E2                     l1382:	
  3654  03E2  3001               	movlw	1
  3655  03E3  02FD               	subwf	___lldiv@counter,f
  3656  03E4  1D03               	btfss	3,2
  3657  03E5  2BE7               	goto	u751
  3658  03E6  2BE8               	goto	u750
  3659  03E7                     u751:	
  3660  03E7  2BAF               	goto	l1372
  3661  03E8                     u750:	
  3662  03E8                     l1384:	
  3663  03E8  087C               	movf	___lldiv@quotient+3,w
  3664  03E9  00F3               	movwf	?___lldiv+3
  3665  03EA  087B               	movf	___lldiv@quotient+2,w
  3666  03EB  00F2               	movwf	?___lldiv+2
  3667  03EC  087A               	movf	___lldiv@quotient+1,w
  3668  03ED  00F1               	movwf	?___lldiv+1
  3669  03EE  0879               	movf	___lldiv@quotient,w
  3670  03EF  00F0               	movwf	?___lldiv
  3671  03F0                     l347:	
  3672  03F0  0008               	return
  3673  03F1                     __end_of___lldiv:	
  3674  007E                     btemp	set	126	;btemp
  3675  007E                     wtemp0	set	126


Data Sizes:
    Strings     29
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@savechain(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    escribirLCD@V	PTR unsigned char  size(2) Largest target is 17
		 -> main@savechain(BANK0[16]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _startLCD->_enviardatos
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setLCD->_enviardatos
    _limpiarLCD->_enviardatos
    _escribirLCD->_charLCD
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    7804
                                             15 BANK0     24    24      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _charLCD
                        _escribirLCD
                         _limpiarLCD
                             _setLCD
                            _sprintf
                           _startLCD
 ---------------------------------------------------------------------------------
 (1) _startLCD                                             2     2      0     934
                                              4 COMMON     2     2      0
                        _enviardatos
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2500
                                              0 BANK0     15    12      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _setLCD                                               6     2      4    1676
                                              4 COMMON     6     2      4
                        _enviardatos
 ---------------------------------------------------------------------------------
 (1) _limpiarLCD                                           2     2      0     934
                                              4 COMMON     2     2      0
                        _enviardatos
 ---------------------------------------------------------------------------------
 (2) _enviardatos                                          4     2      2     934
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _escribirLCD                                          7     5      2     416
                                              2 COMMON     7     5      2
                            _charLCD
 ---------------------------------------------------------------------------------
 (2) _charLCD                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _charLCD
   _escribirLCD
     _charLCD
   _limpiarLCD
     _enviardatos
   _setLCD
     _enviardatos
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _startLCD
     _enviardatos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      27       5       48.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 24 14:11:19 2020

                        pc 0002             ___bmul@product 0072                __CFG_CP$OFF 0000  
                       l20 023B                         l23 01EF                         l32 01AD  
                       l17 0472                         l29 0264                         l38 0346  
                       fsr 0004        ___wmul@multiplicand 0072                        l151 0191  
                      l311 01FC                        l313 0214                        l154 019D  
                      l170 028D                        l171 0292                        l163 0186  
                      l307 07FB                        l148 02CA                        l157 017D  
                      l166 0190                        l169 028A                        l337 01D4  
                      l347 03F0                        l583 038A                        l593 0304  
                      l758 01BF                        _GIE 005F                        u600 019D  
                      u601 019C                        u610 01B6               __CFG_CPD$OFF 0000  
                      u611 01B5                        u620 01BC                        u621 01BB  
                      u710 03AF                        u630 01F6                        u711 03AE  
                      u631 01F5                        u800 0372                        u705 03A0  
                      u801 0371                        u730 03CA                        u731 03C9  
                      u900 025B                        u820 0386                        u660 0210  
                      u725 03B1                        u901 025A                        u821 0385  
                      u805 036E                        u661 020F                        u645 01FD  
                      u750 03E8                        u590 0197                        u910 0312  
                      u670 01C6                        u830 02D1                        u751 03E7  
                      u735 03C6                        u591 0196                        u671 01C5  
                      u815 037A                        u831 02D0                        u655 0204  
                      u920 0334                        u680 01D3                        u760 034F  
                      u745 03DA                        u681 01D2                        u761 034E  
                      u690 039B                        u930 0346                        u850 02E3  
                      u691 039A                        u931 0345                        u851 02E2  
                      u940 02AA                        u780 0361                        u860 02ED  
                      u781 0360                        u861 02EC                        u845 02D5  
                      u950 0286                        u951 0285                        u775 0353  
                      u880 0300                        u960 0603                        u945 02A5  
                      u881 02FF                        u865 02E9                        u961 0602  
                      u890 0242                        u970 0622                        u891 0241  
                      u795 0362                        u875 02F4                        u971 0621  
                      u980 0662                        u981 0661                        u990 0670  
                      u991 066F                        fsr0 0004                        indf 0000  
             __CFG_LVP$OFF 0000               ?_escribirLCD 0072                       l1310 022F  
                     l1320 0191                       l1312 019F                       l1304 0215  
                     l1400 0361                       l1322 0197                       l1314 01A2  
                     l1306 0218                       l1402 0372                       l1410 0386  
                     l1330 01BC                       l1500 0187                       l1316 01A4  
                     l1308 0221                       l1404 0378                       l1420 02DB  
                     l1340 01F6                       l1332 01BE                       l1324 01AF  
                     l1510 027B                       l1502 018C                       l1318 01AA  
                     l1350 01C1                       l1406 0379                       l1430 02FA  
                     l1422 02DF                       l1414 02CB                       l1342 0203  
                     l1326 01B0                       l1512 0280                       l1504 0265  
                     l1520 017E                       l1360 01D3                       l1352 01C2  
                     l1408 0380                       l1424 02E3                       l1416 02D1  
                     l1432 0300                       l1344 020A                       l1336 01F0  
                     l1328 01B6                       l1600 0748                       l1440 0403  
                     l1370 03AB                       l1514 0286                       l1506 026A  
                     l1522 0183                       l1354 01C6                       l1426 02ED  
                     l1418 02D4                       l1346 0210                       l1338 01F2  
                     l1602 0750                       l1530 060A                       l1450 043F  
                     l1442 0415                       l1380 03D9                       l1372 03AF  
                     l1364 038B                       l1516 028E                       l1508 0272  
                     l1460 01D5                       l1356 01CA                       l1428 02F3  
                     l1620 077D                       l1604 0756                       l1612 075C  
                     l1540 063B                       l1532 060F                       l1524 05F8  
                     l1452 0444                       l1444 041A                       l1436 03F1  
                     l1700 055F                       l1382 03E2                       l1374 03B8  
                     l1366 039B                       l1462 01E6                       l1470 0254  
                     l1358 01CC                       l1390 0349                       l1630 07A1  
                     l1622 0784                       l1614 0767                       l1550 0674  
                     l1542 064E                       l1534 0612                       l1526 05FD  
                     l1454 0456                       l1446 0428                       l1438 03FA  
                     l1710 0595                       l1702 0564                       l1376 03CA  
                     l1368 039E                       l1384 03E8                       l1480 0324  
                     l1472 025B                       l1464 023C                       l1392 034F  
                     l1632 07A6                       l1624 0788                       l1616 0773  
                     l1552 0676                       l1560 06A7                       l1544 0652  
                     l1536 0622                       l1528 0603                       l1640 07E5  
                     l1456 045F                       l1448 0431                       l1720 05D8  
                     l1712 05A5                       l1704 056F                       l1378 03D8  
                     l1490 02C7                       l1482 032A                       l1466 0242  
                     l1394 0352                       l1634 07D4                       l1626 0794  
                     l1618 0777                       l1570 06D3                       l1642 07F7  
                     l1554 0687                       l1538 0626                       l1546 0662  
                     l1458 046D                       l1722 05E1                       l1714 05B2  
                     l1706 057F                       l1492 02C8                       l1484 0293  
                     l1476 0305                       l1468 024A                       l1396 0359  
                     l1388 0347                       l1628 079A                       l1580 06EB  
                     l1572 06D7                       l1564 06A8                       l1556 0692  
                     l1548 0670                       l1724 05E7                       l1716 05BB  
                     l1708 058C                       l1660 04AE                       l1652 0473  
                     l1494 02C9                       l1486 0297                       l1478 0308  
                     l1398 035D                       l1638 07DC                       l1590 070D  
                     l1582 06EF                       l1574 06DB                       l1566 06C7  
                     l1558 0696                       l1726 05ED                       l1718 05CB  
                     l1670 04E0                       l1662 04BB                       l1654 0495  
                     l1488 029A                       l1496 0175                       l1592 0717  
                     l1576 06E0                       l1568 06CF                       l1680 050C  
                     l1672 04E5                       l1664 04C4                       l1656 04A4  
                     l1498 017A                       l1594 0727                       l1586 06F1  
                     l1578 06E5                       l1762 06BC                       l1690 0533  
                     l1682 0511                       l1674 04F0                       l1666 04C9  
                     l1658 04A9                       l1596 072E                       l1692 0538  
                     l1684 051C                       l1676 04F5                       l1668 04D2  
                     l1598 0742                       l1694 0543                       l1686 0521  
                     l1678 04FE                       l1696 0548                       l1688 052A  
                     l1698 0551                       STR_1 001D                       STR_2 0034  
                     STR_3 002E                       STR_4 0034                       u1000 06A6  
                     u1001 06A5                       u1010 06D7                       u1011 06D6  
                     u1100 0767                       u1020 06E5                       u1101 0766  
                     u1021 06E4                       u1110 077D                       u1030 06EB  
                     u1111 077C                       u1031 06EA                       u1120 0794  
                     u1040 070C                       u1121 0793                       u1105 0763  
                     u1041 070B                       u1130 079A                       u1050 0717  
                     u1131 0799                       u1051 0716                       u1140 07E5  
                     u1060 0727                       u1141 07E4                       u1061 0726  
                     u1045 0708                       u1150 07F7                       u1070 0742  
                     u1151 07F6                       u1071 0741                       u1207 03F5  
                     u1080 0750                       u1081 074F                       u1065 0723  
                     u1217 0407                       u1090 0756                       u1307 021C  
                     u1091 0755                       u1075 073E                       u1227 0417  
                     u1317 022A                       u1237 0425                       u1327 0236  
                     u1247 0433                       u1167 04EB                       u1337 01A7  
                     u1257 0441                       u1177 0517                       u1267 0451  
                     u1187 053E                       u1277 0461                       u1197 056A  
                     u1287 046F                       u1297 01EA                       _PEIE 005E  
             __CFG_WRT$OFF 0000                       _main 0473                       btemp 007E  
                     start 0000           enviardatos@crack 0070              __CFG_IESO$OFF 0000  
             ?_enviardatos 0070          ___bmul@multiplier 0073           ?_I2C_Master_Init 0020  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070              __CFG_WDTE$OFF 0000                      _ANSEL 0188  
          __end_of___lldiv 03F1            __end_of___lwdiv 038B            __end_of___lwmod 0305  
          __end_of_charLCD 01AE                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063             __CFG_FCMEN$OFF 0000            __end_of_dpowers 001D  
          __end_of_isdigit 01C0             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07FC  
           __CFG_MCLRE$OFF 0000            __initialization 07FC               __end_of_main 05F5  
                   ??_main 002F          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072                     _ANSELH 0189  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013             __CFG_PWRTE$OFF 0000  
                   ___bmul 01C0                     ___wmul 01F0                  ??___lldiv 0078  
                ??___lwdiv 0074                  ??___lwmod 007C              main@savechain 0031  
                ??_charLCD 0070                     _setLCD 023C                  ??_isdigit 0070  
             escribirLCD@V 0072               escribirLCD@X 0077           __end_of_startLCD 0473  
                ??_sprintf 0023       __size_of_escribirLCD 0042    __end_of__initialization 07FC  
      ___bmul@multiplicand 0070             __pcstackCOMMON 0070       __size_of_enviardatos 0027  
             sprintf@width 002B                 __pmaintext 0473                    ?___bmul 0070  
                  ?___wmul 0070                    ?_setLCD 0074                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0003            __size_of___bmul 0015  
                ?_startLCD 0070                    ___lldiv 038B            __size_of___wmul 0025  
                  ___lwdiv 0347                    ___lwmod 02CB                    _charLCD 019E  
          __size_of_setLCD 0029                    __ptext1 03F1                    __ptext2 05F5  
                  __ptext3 01AE                    __ptext4 01F0                    __ptext5 02CB  
                  __ptext6 0347                    __ptext7 01C0                    __ptext8 023C  
                  __ptext9 01D5                 _limpiarLCD 01D5                    _dpowers 0013  
                  _isdigit 01AE   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009                    _sprintf 05F5  
     end_of_initialization 07FC                    setLCD@M 0076                    setLCD@V 0074  
                  setLCD@Z 0078  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D           I2C_Master_Init@c 0020  
         I2C_Master_Read@a 0070                 ??_startLCD 0074                  _PORTDbits 0008  
                _TRISCbits 0087                 main@vcont1 0041             __end_of___bmul 01D5  
           __end_of___wmul 0215             __end_of_setLCD 0265                ?_limpiarLCD 0070  
      start_initialization 07FC              ??_escribirLCD 0074          ??_I2C_Master_Init 0024  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
 __CFG_FOSC$INTRC_NOCLKOUT 0000              ??_enviardatos 0072                   ??___bmul 0071  
                 ??___wmul 0074                   ??_setLCD 0078                  ___latbits 0002  
            __pcstackBANK0 0020                sprintf@flag 0027                sprintf@prec 002D  
      __end_of_escribirLCD 0347           _I2C_Master_Start 0175        __size_of_limpiarLCD 001B  
         _I2C_Master_Write 0187           ___lwdiv@dividend 0072                   ?___lldiv 0070  
                 ?___lwdiv 0070                   ?___lwmod 0078        __end_of_enviardatos 023C  
                 ?_charLCD 0070          __size_of_startLCD 0082                  __pstrings 0003  
                 ?_isdigit 0070           ___lwdiv@quotient 0075                   ?_sprintf 0020  
           ___wmul@product 0074                   _PIR1bits 000C                 _ADCON0bits 001F  
              __stringbase 0012                 _ADCON1bits 009F          ___wmul@multiplier 0070  
                main@vpot1 0045        I2C_Master_Read@temp 0074                _escribirLCD 0305  
              _enviardatos 0215           __size_of___lldiv 0066           __size_of___lwdiv 0044  
         __size_of___lwmod 003A           __size_of_charLCD 0010         __end_of__stringtab 0013  
              _isdigit$801 0070               ??_limpiarLCD 0074                 sprintf@val 0028  
          _I2C_Master_Init 0293            _I2C_Master_Read 0265            _I2C_Master_Wait 0191  
          _I2C_Master_Stop 017E           __size_of_isdigit 0012            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 0215                   __ptext11 0305  
                 __ptext12 019E                   __ptext13 0187                   __ptext14 017E  
                 __ptext15 0175                   __ptext16 0265                   __ptext17 0191  
                 __ptext18 0293                   __ptext19 038B          __CFG_BOR4V$BOR40V 0000  
                 charLCD@V 0071           __size_of_sprintf 0207              __size_of_main 0182  
       __end_of_limpiarLCD 01F0                   _startLCD 03F1                   main@temp 0043  
 __end_of_I2C_Master_Start 017E   __end_of_I2C_Master_Write 0191                   isdigit@c 0071  
                sprintf@ap 0026                  sprintf@sp 002A           ___lwmod@dividend 007A  
         ___lldiv@dividend 0074                  stringcode 000D    __end_of_I2C_Master_Init 02CB  
  __end_of_I2C_Master_Read 0293    __end_of_I2C_Master_Wait 019E    __end_of_I2C_Master_Stop 0187  
                 sprintf@c 002E                   sprintf@f 0020           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070            ___lwmod@divisor 0078            ___lwmod@counter 007D  
                 stringdir 000D                   stringtab 0003                _SSPCON2bits 0091  
